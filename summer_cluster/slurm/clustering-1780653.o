#########################BEGIN-PROLOG#########################
JobId             = 1780653
ArrayJobId        = 1780649
ArrayTaskId       = 18
ArrayTaskThrottle = 15
JobName           = clustering
UserId            = zhaok220(20487)
GroupId           = zhaok220(20487)
MCS_label         = N/A
Priority          = 92
Nice              = 0
Account           = khurigrp
QOS               = normal
Requeue           = 1
Restarts          = 0
BatchFlag         = 1
Reboot            = 0
ExitCode          = 0:0
RunTime           = 00:00:00
TimeLimit         = 7-00:00:00
TimeMin           = N/A
SubmitTime        = 2022-07-13T19:04:38
EligibleTime      = 2022-07-13T19:04:38
AccrueTime        = Unknown
StartTime         = 2022-07-13T19:04:38
EndTime           = 2022-07-20T19:04:38
Deadline          = N/A
Partition         = medium
AllocNode:Sid     = gemini:177893
NodeList          = comp-09-4
BatchHost         = comp-09-4
NumNodes          = 1
NumCPUs           = 1
NumTasks          = 1
CPUs/Task         = 1
ReqB:S:C:T        = 0:0:*:*
TRES=cpu=1,mem=64G,node=1,billing= cpu=1,mem=64G,node=1,billing=1
Socks/Node        = *
NtasksPerN:B:S:C  = 1:0:*:*
CoreSpec          = *
MinCPUsNode       = 1
MinMemoryNode     = 64G
MinTmpDiskNode    = 0
Command           = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering_mul.slurm
WorkDir           = /deac/csc/khuriGrp/zhaok220/clustering/slurm
StdErr            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1780653.e
StdOut            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1780653.o
Power             = 
MailUser          = zhaok220@wfu.edu
MailType          = BEGIN,END,FAIL
NtasksPerTRES:0   = NtasksPerTRES:0
###########################END-PROLOG#########################
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.012706995010375977 seconds
Jaccard graph constructed in 1.4130420684814453 seconds
Wrote graph to binary file in 0.03570294380187988 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.872875
After 3 runs, maximum modularity is Q = 0.874592
After 16 runs, maximum modularity is Q = 0.876143
Louvain completed 36 runs in 0.9811191558837891 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.943765163421631 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.015232086181640625 seconds
Jaccard graph constructed in 1.5559117794036865 seconds
Wrote graph to binary file in 0.03393745422363281 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.87218
After 3 runs, maximum modularity is Q = 0.873464
After 20 runs, maximum modularity is Q = 0.87449
Louvain completed 40 runs in 1.2365059852600098 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.330904006958008 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01330709457397461 seconds
Jaccard graph constructed in 1.377810001373291 seconds
Wrote graph to binary file in 0.029423952102661133 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.870865
After 6 runs, maximum modularity is Q = 0.872003
After 13 runs, maximum modularity is Q = 0.87303
Louvain completed 33 runs in 1.0164732933044434 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.904621124267578 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.013325929641723633 seconds
Jaccard graph constructed in 1.4558563232421875 seconds
Wrote graph to binary file in 0.03239154815673828 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.878063
After 2 runs, maximum modularity is Q = 0.881133
Louvain completed 22 runs in 0.778266191482544 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.774125814437866 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007192373275756836 seconds
Jaccard graph constructed in 0.8925466537475586 seconds
Wrote graph to binary file in 0.014656305313110352 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.825857
After 4 runs, maximum modularity is Q = 0.827365
After 10 runs, maximum modularity is Q = 0.828447
Louvain completed 30 runs in 0.5869178771972656 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.9813013076782227 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007489681243896484 seconds
Jaccard graph constructed in 0.8932108879089355 seconds
Wrote graph to binary file in 0.014768123626708984 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.835347
After 6 runs, maximum modularity is Q = 0.837381
Louvain completed 26 runs in 0.4985771179199219 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.9032986164093018 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007509946823120117 seconds
Jaccard graph constructed in 0.9705977439880371 seconds
Wrote graph to binary file in 0.014027833938598633 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.825451
After 2 runs, maximum modularity is Q = 0.829056
Louvain completed 22 runs in 0.4126160144805908 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.9797117710113525 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.006989240646362305 seconds
Jaccard graph constructed in 0.8487417697906494 seconds
Wrote graph to binary file in 0.01391458511352539 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.819639
After 2 runs, maximum modularity is Q = 0.822227
After 3 runs, maximum modularity is Q = 0.823276
After 21 runs, maximum modularity is Q = 0.824338
Louvain completed 41 runs in 0.746544599533081 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.144390106201172 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02465677261352539 seconds
Jaccard graph constructed in 2.283590316772461 seconds
Wrote graph to binary file in 0.05946969985961914 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.90132
After 2 runs, maximum modularity is Q = 0.903074
Louvain completed 22 runs in 1.042055368423462 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.964531421661377 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02987980842590332 seconds
Jaccard graph constructed in 2.5033159255981445 seconds
Wrote graph to binary file in 0.06766200065612793 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.905056
Louvain completed 21 runs in 0.997002363204956 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.149417400360107 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.026212692260742188 seconds
Jaccard graph constructed in 2.445722818374634 seconds
Wrote graph to binary file in 0.05715680122375488 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901289
After 2 runs, maximum modularity is Q = 0.902315
After 15 runs, maximum modularity is Q = 0.903717
Louvain completed 35 runs in 1.510594129562378 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.527243614196777 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.025722026824951172 seconds
Jaccard graph constructed in 2.2529516220092773 seconds
Wrote graph to binary file in 0.06177043914794922 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.902061
Louvain completed 21 runs in 0.8905737400054932 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.7205989360809326 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.013620615005493164 seconds
Jaccard graph constructed in 1.3993313312530518 seconds
Wrote graph to binary file in 0.028588533401489258 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.875017
After 3 runs, maximum modularity is Q = 0.878447
Louvain completed 23 runs in 0.615931510925293 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.5336227416992188 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014794588088989258 seconds
