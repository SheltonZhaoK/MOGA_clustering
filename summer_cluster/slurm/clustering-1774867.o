#########################BEGIN-PROLOG#########################
JobId             = 1774867
ArrayJobId        = 1774864
ArrayTaskId       = 2
ArrayTaskThrottle = 10
JobName           = clustering
UserId            = zhaok220(20487)
GroupId           = zhaok220(20487)
MCS_label         = N/A
Priority          = 92
Nice              = 0
Account           = khurigrp
QOS               = normal
Requeue           = 1
Restarts          = 0
BatchFlag         = 1
Reboot            = 0
ExitCode          = 0:0
RunTime           = 00:00:01
TimeLimit         = 7-00:00:00
TimeMin           = N/A
SubmitTime        = 2022-07-08T14:22:46
EligibleTime      = 2022-07-08T14:22:46
AccrueTime        = Unknown
StartTime         = 2022-07-08T14:22:46
EndTime           = 2022-07-15T14:22:47
Deadline          = N/A
Partition         = medium
AllocNode:Sid     = gemini:189140
NodeList          = comp-03-6
BatchHost         = comp-03-6
NumNodes          = 1
NumCPUs           = 1
NumTasks          = 1
CPUs/Task         = 1
ReqB:S:C:T        = 0:0:*:*
TRES=cpu=1,mem=64G,node=1,billing= cpu=1,mem=64G,node=1,billing=1
Socks/Node        = *
NtasksPerN:B:S:C  = 1:0:*:*
CoreSpec          = *
MinCPUsNode       = 1
MinMemoryNode     = 64G
MinTmpDiskNode    = 0
Command           = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering_mul.slurm
WorkDir           = /deac/csc/khuriGrp/zhaok220/clustering/slurm
StdErr            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1774867.e
StdOut            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1774867.o
Power             = 
MailUser          = zhaok220@wfu.edu
MailType          = BEGIN,END,FAIL
NtasksPerTRES:0   = NtasksPerTRES:0
###########################END-PROLOG#########################
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.018201828002929688 seconds
Jaccard graph constructed in 2.805605173110962 seconds
Wrote graph to binary file in 0.05042672157287598 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.875626
Louvain completed 21 runs in 0.9952476024627686 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.7441487312316895 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.021837234497070312 seconds
Jaccard graph constructed in 2.3856606483459473 seconds
Wrote graph to binary file in 0.04333925247192383 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.872422
After 9 runs, maximum modularity is Q = 0.873553
After 15 runs, maximum modularity is Q = 0.874692
Louvain completed 35 runs in 1.617544412612915 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.930558443069458 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01765751838684082 seconds
Jaccard graph constructed in 2.8612942695617676 seconds
Wrote graph to binary file in 0.05082130432128906 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.872209
Louvain completed 21 runs in 0.9730651378631592 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.77869439125061 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02059340476989746 seconds
Jaccard graph constructed in 2.3737945556640625 seconds
Wrote graph to binary file in 0.04300665855407715 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.880311
Louvain completed 21 runs in 0.9036636352539062 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.22421407699585 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.010445356369018555 seconds
Jaccard graph constructed in 1.5148828029632568 seconds
Wrote graph to binary file in 0.019005298614501953 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.822116
After 2 runs, maximum modularity is Q = 0.82592
After 6 runs, maximum modularity is Q = 0.82741
After 9 runs, maximum modularity is Q = 0.828993
Louvain completed 29 runs in 1.5392389297485352 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.345983028411865 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.012172937393188477 seconds
Jaccard graph constructed in 1.640690565109253 seconds
Wrote graph to binary file in 0.02048969268798828 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.83407
After 2 runs, maximum modularity is Q = 0.835816
After 6 runs, maximum modularity is Q = 0.837669
Louvain completed 26 runs in 0.9726150035858154 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.508225917816162 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.010822534561157227 seconds
Jaccard graph constructed in 1.4667787551879883 seconds
Wrote graph to binary file in 0.01788043975830078 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.825696
After 4 runs, maximum modularity is Q = 0.829924
Louvain completed 24 runs in 0.7564191818237305 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.2012314796447754 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.010428190231323242 seconds
