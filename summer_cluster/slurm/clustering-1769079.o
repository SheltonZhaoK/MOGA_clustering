#########################BEGIN-PROLOG#########################
JobId             = 1769079
ArrayJobId        = 1765123
ArrayTaskId       = 4
ArrayTaskThrottle = 10
JobName           = clustering
UserId            = zhaok220(20487)
GroupId           = zhaok220(20487)
MCS_label         = N/A
Priority          = 91
Nice              = 0
Account           = khurigrp
QOS               = normal
Requeue           = 1
Restarts          = 0
BatchFlag         = 1
Reboot            = 0
ExitCode          = 0:0
RunTime           = 00:00:00
TimeLimit         = 7-00:00:00
TimeMin           = N/A
SubmitTime        = 2022-07-06T11:43:14
EligibleTime      = 2022-07-06T11:43:14
AccrueTime        = 2022-07-06T11:43:14
StartTime         = 2022-07-06T15:21:31
EndTime           = 2022-07-13T15:21:31
Deadline          = N/A
Partition         = medium
AllocNode:Sid     = gemini:156330
NodeList          = comp-22-6
BatchHost         = comp-22-6
NumNodes          = 1
NumCPUs           = 1
NumTasks          = 1
CPUs/Task         = 1
ReqB:S:C:T        = 0:0:*:*
TRES=cpu=1,mem=64G,node=1,billing= cpu=1,mem=64G,node=1,billing=1
Socks/Node        = *
NtasksPerN:B:S:C  = 1:0:*:*
CoreSpec          = *
MinCPUsNode       = 1
MinMemoryNode     = 64G
MinTmpDiskNode    = 0
Command           = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering_mul.slurm
WorkDir           = /deac/csc/khuriGrp/zhaok220/clustering/slurm
StdErr            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1769079.e
StdOut            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1769079.o
Power             = 
MailUser          = zhaok220@wfu.edu
MailType          = BEGIN,END,FAIL
NtasksPerTRES:0   = NtasksPerTRES:0
###########################END-PROLOG#########################
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008197546005249023 seconds
Jaccard graph constructed in 1.3680920600891113 seconds
Wrote graph to binary file in 0.011963129043579102 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.78074
After 2 runs, maximum modularity is Q = 0.787585
Louvain completed 22 runs in 0.752147912979126 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.181234121322632 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.006966114044189453 seconds
Jaccard graph constructed in 1.3308467864990234 seconds
Wrote graph to binary file in 0.012096881866455078 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.78381
Louvain completed 21 runs in 0.6565201282501221 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.0967116355895996 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02169346809387207 seconds
Jaccard graph constructed in 2.4381847381591797 seconds
Wrote graph to binary file in 0.04380226135253906 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.874011
After 3 runs, maximum modularity is Q = 0.876975
Louvain completed 23 runs in 1.2012786865234375 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.802436590194702 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.020290374755859375 seconds
Jaccard graph constructed in 2.689527750015259 seconds
Wrote graph to binary file in 0.047924041748046875 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.875999
After 2 runs, maximum modularity is Q = 0.878515
Louvain completed 22 runs in 1.1668603420257568 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.993633031845093 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.019847393035888672 seconds
Jaccard graph constructed in 2.4890408515930176 seconds
Wrote graph to binary file in 0.040215492248535156 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.873879
After 2 runs, maximum modularity is Q = 0.876366
After 22 runs, maximum modularity is Q = 0.877529
Louvain completed 42 runs in 2.082685947418213 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 5.829967975616455 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.024716854095458984 seconds
Jaccard graph constructed in 2.679839611053467 seconds
Wrote graph to binary file in 0.05035400390625 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.877877
After 2 runs, maximum modularity is Q = 0.879573
Louvain completed 22 runs in 1.2195780277252197 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 5.081447124481201 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01226043701171875 seconds
Jaccard graph constructed in 1.8453164100646973 seconds
Wrote graph to binary file in 0.019690752029418945 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.825428
After 2 runs, maximum modularity is Q = 0.827866
After 7 runs, maximum modularity is Q = 0.82887
Louvain completed 27 runs in 1.1486480236053467 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.154065370559692 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.010886430740356445 seconds
Jaccard graph constructed in 1.8803894519805908 seconds
Wrote graph to binary file in 0.022853612899780273 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.834839
After 2 runs, maximum modularity is Q = 0.836123
After 5 runs, maximum modularity is Q = 0.838262
After 16 runs, maximum modularity is Q = 0.839876
Louvain completed 36 runs in 1.604515790939331 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.6061623096466064 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.009771108627319336 seconds
Jaccard graph constructed in 1.9310789108276367 seconds
Wrote graph to binary file in 0.01967024803161621 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.825848
Louvain completed 21 runs in 0.7909729480743408 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.8733928203582764 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.011063575744628906 seconds
Jaccard graph constructed in 1.885098934173584 seconds
Wrote graph to binary file in 0.022477388381958008 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.817831
After 2 runs, maximum modularity is Q = 0.822547
Louvain completed 22 runs in 0.929671049118042 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.9818239212036133 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.035695791244506836 seconds
Jaccard graph constructed in 3.854128122329712 seconds
Wrote graph to binary file in 0.08780598640441895 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.902919
Louvain completed 21 runs in 1.5715861320495605 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 6.671864748001099 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.04246926307678223 seconds
Jaccard graph constructed in 4.2237913608551025 seconds
Wrote graph to binary file in 0.09858465194702148 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.904354
Louvain completed 21 runs in 1.6698503494262695 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 7.117582559585571 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.037750959396362305 seconds
Jaccard graph constructed in 3.932577610015869 seconds
Wrote graph to binary file in 0.08756446838378906 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901084
After 2 runs, maximum modularity is Q = 0.902976
Louvain completed 22 runs in 1.9587955474853516 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 7.165466785430908 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0364990234375 seconds
Jaccard graph constructed in 4.220398187637329 seconds
Wrote graph to binary file in 0.08868622779846191 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.902664
Louvain completed 21 runs in 1.6268563270568848 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 7.077695846557617 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02128911018371582 seconds
Jaccard graph constructed in 2.5259878635406494 seconds
Wrote graph to binary file in 0.04390835762023926 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.877502
Louvain completed 21 runs in 1.0175113677978516 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.736002683639526 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02324223518371582 seconds
Jaccard graph constructed in 2.786654472351074 seconds
Wrote graph to binary file in 0.04924464225769043 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.890975
Louvain completed 21 runs in 1.0853722095489502 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 5.145039319992065 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02062392234802246 seconds
Jaccard graph constructed in 2.568080425262451 seconds
Wrote graph to binary file in 0.041864871978759766 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.877062
After 3 runs, maximum modularity is Q = 0.878258
Louvain completed 23 runs in 1.2091789245605469 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.980921030044556 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.021352767944335938 seconds
Jaccard graph constructed in 2.859184503555298 seconds
Wrote graph to binary file in 0.04559016227722168 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.881659
After 2 runs, maximum modularity is Q = 0.883133
Louvain completed 22 runs in 1.2252061367034912 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 5.2827253341674805 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.03946828842163086 seconds
Jaccard graph constructed in 3.9086005687713623 seconds
Wrote graph to binary file in 0.0865163803100586 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901917
After 11 runs, maximum modularity is Q = 0.903046
Louvain completed 31 runs in 2.234186887741089 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 7.409195423126221 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.04118800163269043 seconds
Jaccard graph constructed in 4.4134840965271 seconds
Wrote graph to binary file in 0.09770059585571289 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.906959
After 6 runs, maximum modularity is Q = 0.908666
Louvain completed 26 runs in 2.248847484588623 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 8.003150939941406 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0453495979309082 seconds
Jaccard graph constructed in 3.849248170852661 seconds
Wrote graph to binary file in 0.08467459678649902 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.900311
After 7 runs, maximum modularity is Q = 0.901348
Louvain completed 27 runs in 2.106424570083618 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 7.242555618286133 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.03924274444580078 seconds
Jaccard graph constructed in 3.889615297317505 seconds
Wrote graph to binary file in 0.08749127388000488 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.904686
Louvain completed 21 runs in 1.6151471138000488 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 6.764145612716675 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0227663516998291 seconds
Jaccard graph constructed in 2.547076463699341 seconds
Wrote graph to binary file in 0.04355978965759277 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.871261
After 2 runs, maximum modularity is Q = 0.872282
After 5 runs, maximum modularity is Q = 0.874584
Louvain completed 25 runs in 1.4674763679504395 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 5.210424900054932 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.023363590240478516 seconds
Jaccard graph constructed in 2.7775819301605225 seconds
Wrote graph to binary file in 0.052032470703125 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.886501
After 4 runs, maximum modularity is Q = 0.887932
Louvain completed 24 runs in 1.3668251037597656 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 5.3745973110198975 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.020718097686767578 seconds
Jaccard graph constructed in 2.560889482498169 seconds
Wrote graph to binary file in 0.0427546501159668 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.87746
After 6 runs, maximum modularity is Q = 0.878811
Louvain completed 26 runs in 1.3353793621063232 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 5.052079439163208 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.022217512130737305 seconds
Jaccard graph constructed in 2.616925001144409 seconds
Wrote graph to binary file in 0.05029106140136719 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.879833
After 18 runs, maximum modularity is Q = 0.881134
Louvain completed 38 runs in 1.9311728477478027 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 5.7700653076171875 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007493257522583008 seconds
Jaccard graph constructed in 1.2144732475280762 seconds
Wrote graph to binary file in 0.00601959228515625 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.716878
After 2 runs, maximum modularity is Q = 0.717911
Louvain completed 22 runs in 0.6653053760528564 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.9864614009857178 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004829883575439453 seconds
Jaccard graph constructed in 1.3382489681243896 seconds
Wrote graph to binary file in 0.0064656734466552734 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.668542
After 2 runs, maximum modularity is Q = 0.670141
After 5 runs, maximum modularity is Q = 0.672555
Louvain completed 25 runs in 0.8830146789550781 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.36902117729187 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.00651240348815918 seconds
Jaccard graph constructed in 1.2674036026000977 seconds
Wrote graph to binary file in 0.006226062774658203 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.695475
Louvain completed 21 runs in 0.6066656112670898 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.9931867122650146 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004789113998413086 seconds
Jaccard graph constructed in 1.2384166717529297 seconds
Wrote graph to binary file in 0.0058498382568359375 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.657704
After 4 runs, maximum modularity is Q = 0.660026
Louvain completed 24 runs in 0.7762124538421631 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.110595464706421 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.005407094955444336 seconds
Jaccard graph constructed in 1.253190279006958 seconds
Wrote graph to binary file in 0.0060307979583740234 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.683329
Louvain completed 21 runs in 0.613635778427124 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.010521650314331 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.005521297454833984 seconds
Jaccard graph constructed in 1.2704274654388428 seconds
Wrote graph to binary file in 0.005988359451293945 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.657669
After 10 runs, maximum modularity is Q = 0.659852
Louvain completed 30 runs in 0.9724392890930176 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.3925087451934814 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.00377655029296875 seconds
Jaccard graph constructed in 1.192225694656372 seconds
Wrote graph to binary file in 0.004058837890625 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.496807
Louvain completed 21 runs in 0.5776388645172119 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.8170053958892822 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004227399826049805 seconds
Jaccard graph constructed in 1.1773948669433594 seconds
Wrote graph to binary file in 0.007916450500488281 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.492017
Louvain completed 21 runs in 0.574193000793457 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.8553056716918945 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.003834962844848633 seconds
Jaccard graph constructed in 1.1597814559936523 seconds
Wrote graph to binary file in 0.003950834274291992 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.499634
Louvain completed 21 runs in 0.6295576095581055 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.8985812664031982 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004847049713134766 seconds
Jaccard graph constructed in 1.1557798385620117 seconds
Wrote graph to binary file in 0.0090484619140625 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.358391
Louvain completed 21 runs in 0.6665825843811035 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.915076732635498 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0035543441772460938 seconds
Jaccard graph constructed in 1.1187524795532227 seconds
Wrote graph to binary file in 0.004319667816162109 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.383167
Louvain completed 21 runs in 0.5858733654022217 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.8137736320495605 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.003834247589111328 seconds
Jaccard graph constructed in 1.1448783874511719 seconds
Wrote graph to binary file in 0.004421710968017578 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.384724
Louvain completed 21 runs in 0.6165778636932373 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.9351160526275635 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008011579513549805 seconds
Jaccard graph constructed in 1.2582144737243652 seconds
Wrote graph to binary file in 0.011383295059204102 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.781488
After 3 runs, maximum modularity is Q = 0.783037
After 4 runs, maximum modularity is Q = 0.78407
After 12 runs, maximum modularity is Q = 0.786044
Louvain completed 32 runs in 1.200082778930664 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.6215150356292725 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.006827354431152344 seconds
Jaccard graph constructed in 1.3659822940826416 seconds
Wrote graph to binary file in 0.01052546501159668 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.792981
After 2 runs, maximum modularity is Q = 0.794788
Louvain completed 22 runs in 0.7799959182739258 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.2842884063720703 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007445573806762695 seconds
Jaccard graph constructed in 1.490919589996338 seconds
Wrote graph to binary file in 0.012769460678100586 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.787277
Louvain completed 21 runs in 0.7274885177612305 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.323477029800415 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007523059844970703 seconds
Jaccard graph constructed in 1.3465027809143066 seconds
Wrote graph to binary file in 0.010413885116577148 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.782741
After 4 runs, maximum modularity is Q = 0.785022
Louvain completed 24 runs in 0.8160078525543213 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.2611021995544434 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.006759166717529297 seconds
Jaccard graph constructed in 1.3798081874847412 seconds
Wrote graph to binary file in 0.012007951736450195 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.796576
After 3 runs, maximum modularity is Q = 0.798932
Louvain completed 23 runs in 0.8283834457397461 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.3521294593811035 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.006269216537475586 seconds
Jaccard graph constructed in 1.4198060035705566 seconds
Wrote graph to binary file in 0.011016607284545898 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.768421
After 4 runs, maximum modularity is Q = 0.770834
Louvain completed 24 runs in 0.8187346458435059 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.400326728820801 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007512331008911133 seconds
Jaccard graph constructed in 1.3943679332733154 seconds
Wrote graph to binary file in 0.0125885009765625 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.788962
After 9 runs, maximum modularity is Q = 0.791502
Louvain completed 29 runs in 0.9582738876342773 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.4831531047821045 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008616447448730469 seconds
Jaccard graph constructed in 1.41636323928833 seconds
Wrote graph to binary file in 0.012919902801513672 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.781728
After 15 runs, maximum modularity is Q = 0.78297
Louvain completed 35 runs in 1.166222333908081 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.7132081985473633 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007065534591674805 seconds
Jaccard graph constructed in 1.409803867340088 seconds
Wrote graph to binary file in 0.011003494262695312 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.775775
After 2 runs, maximum modularity is Q = 0.779264
After 3 runs, maximum modularity is Q = 0.782307
Louvain completed 23 runs in 0.8772904872894287 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.422049045562744 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0069408416748046875 seconds
Jaccard graph constructed in 1.413003921508789 seconds
Wrote graph to binary file in 0.009632349014282227 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.774918
After 5 runs, maximum modularity is Q = 0.77653
Louvain completed 25 runs in 0.8481507301330566 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.454322338104248 seconds
/deac/csc/khuriGrp/zhaok220/clustering/data/scrna_benchmarks_umap/ICELL8_SE_A_kallisto_umap.csv
-- Begin evolution --
-- Generation 1 --
-- Generation 2 --
-- Generation 3 --
-- Generation 4 --
-- Generation 5 --
-- Generation 6 --
-- Generation 7 --
-- Generation 8 --
-- Generation 9 --
-- Generation 10 --
-- Generation 11 --
-- Generation 12 --
-- Generation 13 --
-- Generation 14 --
-- Generation 15 --
-- Generation 16 --
-- Generation 17 --
-- Generation 18 --
-- Generation 19 --
-- Generation 20 --
-- Generation 21 --
-- Generation 22 --
-- Generation 23 --
-- Generation 24 --
-- Generation 25 --
-- Generation 26 --
-- Generation 27 --
-- Generation 28 --
-- Generation 29 --
-- Generation 30 --
-- Generation 31 --
-- Generation 32 --
-- Generation 33 --
-- Generation 34 --
-- Generation 35 --
-- Generation 36 --
-- Generation 37 --
-- Generation 38 --
-- Generation 39 --
-- Generation 40 --
-- Generation 41 --
-- Generation 42 --
-- Generation 43 --
-- Generation 44 --
-- Generation 45 --
-- Generation 46 --
-- Generation 47 --
-- Generation 48 --
-- Generation 49 --
-- Generation 50 --
-- Generation 51 --
-- Generation 52 --
-- Generation 53 --
-- Generation 54 --
-- Generation 55 --
-- Generation 56 --
-- Generation 57 --
-- Generation 58 --
-- Generation 59 --
-- Generation 60 --
-- Generation 61 --
-- Generation 62 --
-- Generation 63 --
-- Generation 64 --
-- Generation 65 --
-- Generation 66 --
-- Generation 67 --
-- Generation 68 --
-- Generation 69 --
-- Generation 70 --
-- Generation 71 --
-- Generation 72 --
-- Generation 73 --
-- Generation 74 --
-- Generation 75 --
-- Generation 76 --
-- Generation 77 --
-- Generation 78 --
-- Generation 79 --
-- Generation 80 --
-- Generation 81 --
-- Generation 82 --
-- Generation 83 --
-- Generation 84 --
-- Generation 85 --
-- Generation 86 --
-- Generation 87 --
-- Generation 88 --
-- Generation 89 --
-- Generation 90 --
-- Generation 91 --
-- Generation 92 --
-- Generation 93 --
-- Generation 94 --
-- Generation 95 --
-- Generation 96 --
-- Generation 97 --
-- Generation 98 --
-- Generation 99 --
-- Generation 100 --
-- Generation 101 --
-- Generation 102 --
-- Generation 103 --
-- Generation 104 --
-- Generation 105 --
-- Generation 106 --
-- Generation 107 --
-- Generation 108 --
-- Generation 109 --
-- Generation 110 --
-- Generation 111 --
-- Generation 112 --
-- Generation 113 --
-- Generation 114 --
-- Generation 115 --
-- Generation 116 --
-- Generation 117 --
-- Generation 118 --
-- Generation 119 --
-- Generation 120 --
-- Generation 121 --
-- Generation 122 --
-- Generation 123 --
-- Generation 124 --
-- Generation 125 --
-- Generation 126 --
-- Generation 127 --
-- Generation 128 --
-- Generation 129 --
-- Generation 130 --
-- Generation 131 --
-- Generation 132 --
-- Generation 133 --
-- Generation 134 --
-- Generation 135 --
-- Generation 136 --
-- Generation 137 --
-- Generation 138 --
-- Generation 139 --
-- Generation 140 --
-- Generation 141 --
-- Generation 142 --
-- Generation 143 --
-- Generation 144 --
-- Generation 145 --
-- Generation 146 --
-- Generation 147 --
-- Generation 148 --
-- Generation 149 --
-- Generation 150 --
-- Generation 151 --
-- Generation 152 --
-- Generation 153 --
-- Generation 154 --
-- Generation 155 --
-- Generation 156 --
-- Generation 157 --
-- Generation 158 --
-- Generation 159 --
-- Generation 160 --
-- Generation 161 --
-- Generation 162 --
-- Generation 163 --
-- Generation 164 --
-- Generation 165 --
-- Generation 166 --
-- Generation 167 --
-- Generation 168 --
-- Generation 169 --
-- Generation 170 --
-- Generation 171 --
-- Generation 172 --
-- Generation 173 --
-- Generation 174 --
-- Generation 175 --
-- Generation 176 --
-- Generation 177 --
-- Generation 178 --
-- Generation 179 --
-- Generation 180 --
-- Generation 181 --
-- Generation 182 --
-- Generation 183 --
-- Generation 184 --
-- Generation 185 --
-- Generation 186 --
-- Generation 187 --
-- Generation 188 --
-- Generation 189 --
-- Generation 190 --
-- Generation 191 --
-- Generation 192 --
-- Generation 193 --
-- Generation 194 --
-- Generation 195 --
-- Generation 196 --
-- Generation 197 --
-- Generation 198 --
-- Generation 199 --
-- Generation 200 --
-- Generation 201 --
-- Generation 202 --
-- Generation 203 --
-- Generation 204 --
-- Generation 205 --
-- Generation 206 --
-- Generation 207 --
-- Generation 208 --
-- Generation 209 --
-- Generation 210 --
-- Generation 211 --
-- Generation 212 --
-- Generation 213 --
-- Generation 214 --
-- Generation 215 --
-- Generation 216 --
-- Generation 217 --
-- Generation 218 --
-- Generation 219 --
-- Generation 220 --
-- Generation 221 --
-- Generation 222 --
-- Generation 223 --
-- Generation 224 --
-- Generation 225 --
-- Generation 226 --
-- Generation 227 --
-- Generation 228 --
-- Generation 229 --
-- Generation 230 --
-- Generation 231 --
-- Generation 232 --
-- Generation 233 --
-- Generation 234 --
-- Generation 235 --
-- Generation 236 --
-- Generation 237 --
-- Generation 238 --
-- Generation 239 --
-- Generation 240 --
-- Generation 241 --
-- Generation 242 --
-- Generation 243 --
-- Generation 244 --
-- Generation 245 --
-- Generation 246 --
-- Generation 247 --
-- Generation 248 --
-- Generation 249 --
-- Generation 250 --
-- Generation 251 --
-- Generation 252 --
-- Generation 253 --
-- Generation 254 --
-- Generation 255 --
-- Generation 256 --
-- Generation 257 --
-- Generation 258 --
-- Generation 259 --
-- Generation 260 --
-- Generation 261 --
-- Generation 262 --
-- Generation 263 --
-- Generation 264 --
-- Generation 265 --
-- Generation 266 --
-- Generation 267 --
-- Generation 268 --
-- Generation 269 --
-- Generation 270 --
-- Generation 271 --
-- Generation 272 --
-- Generation 273 --
-- Generation 274 --
-- Generation 275 --
-- Generation 276 --
-- Generation 277 --
-- Generation 278 --
-- Generation 279 --
-- Generation 280 --
-- Generation 281 --
-- Generation 282 --
-- Generation 283 --
-- Generation 284 --
-- Generation 285 --
-- Generation 286 --
-- Generation 287 --
-- Generation 288 --
-- Generation 289 --
-- Generation 290 --
-- Generation 291 --
-- Generation 292 --
-- Generation 293 --
-- Generation 294 --
-- Generation 295 --
-- Generation 296 --
-- Generation 297 --
-- Generation 298 --
-- Generation 299 --
-- Generation 300 --
-- Generation 301 --
-- Generation 302 --
-- Generation 303 --
-- Generation 304 --
-- Generation 305 --
-- Generation 306 --
-- Generation 307 --
-- Generation 308 --
-- Generation 309 --
-- Generation 310 --
-- Generation 311 --
-- Generation 312 --
-- Generation 313 --
-- Generation 314 --
-- Generation 315 --
-- Generation 316 --
-- Generation 317 --
-- Generation 318 --
-- Generation 319 --
-- Generation 320 --
-- Generation 321 --
-- Generation 322 --
-- Generation 323 --
-- Generation 324 --
-- Generation 325 --
-- Generation 326 --
-- Generation 327 --
-- Generation 328 --
-- Generation 329 --
-- Generation 330 --
-- Generation 331 --
-- Generation 332 --
-- Generation 333 --
-- Generation 334 --
-- Generation 335 --
-- Generation 336 --
-- Generation 337 --
-- Generation 338 --
-- Generation 339 --
-- Generation 340 --
-- Generation 341 --
-- Generation 342 --
-- Generation 343 --
-- Generation 344 --
-- Generation 345 --
-- Generation 346 --
-- Generation 347 --
-- Generation 348 --
-- Generation 349 --
-- Generation 350 --
-- End of (successful) evolution --
Max memory consumption for Job 1769079 on host comp-22-6 is: 1285144576.0B
