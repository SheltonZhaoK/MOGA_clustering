#########################BEGIN-PROLOG#########################
JobId             = 1780656
ArrayJobId        = 1780649
ArrayTaskId       = 21
ArrayTaskThrottle = 15
JobName           = clustering
UserId            = zhaok220(20487)
GroupId           = zhaok220(20487)
MCS_label         = N/A
Priority          = 92
Nice              = 0
Account           = khurigrp
QOS               = normal
Requeue           = 1
Restarts          = 0
BatchFlag         = 1
Reboot            = 0
ExitCode          = 0:0
RunTime           = 00:00:00
TimeLimit         = 7-00:00:00
TimeMin           = N/A
SubmitTime        = 2022-07-13T19:04:38
EligibleTime      = 2022-07-13T19:04:38
AccrueTime        = Unknown
StartTime         = 2022-07-13T19:04:38
EndTime           = 2022-07-20T19:04:38
Deadline          = N/A
Partition         = medium
AllocNode:Sid     = gemini:177893
NodeList          = comp-06-8
BatchHost         = comp-06-8
NumNodes          = 1
NumCPUs           = 1
NumTasks          = 1
CPUs/Task         = 1
ReqB:S:C:T        = 0:0:*:*
TRES=cpu=1,mem=64G,node=1,billing= cpu=1,mem=64G,node=1,billing=1
Socks/Node        = *
NtasksPerN:B:S:C  = 1:0:*:*
CoreSpec          = *
MinCPUsNode       = 1
MinMemoryNode     = 64G
MinTmpDiskNode    = 0
Command           = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering_mul.slurm
WorkDir           = /deac/csc/khuriGrp/zhaok220/clustering/slurm
StdErr            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1780656.e
StdOut            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1780656.o
Power             = 
MailUser          = zhaok220@wfu.edu
MailType          = BEGIN,END,FAIL
NtasksPerTRES:0   = NtasksPerTRES:0
###########################END-PROLOG#########################
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014633655548095703 seconds
Jaccard graph constructed in 1.5103933811187744 seconds
Wrote graph to binary file in 0.03210091590881348 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.874367
After 7 runs, maximum modularity is Q = 0.876081
Louvain completed 27 runs in 0.9134852886199951 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.9929866790771484 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.016936063766479492 seconds
Jaccard graph constructed in 1.5059483051300049 seconds
Wrote graph to binary file in 0.03501629829406738 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.873715
After 10 runs, maximum modularity is Q = 0.874871
Louvain completed 30 runs in 0.9474523067474365 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.0683014392852783 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.013885021209716797 seconds
Jaccard graph constructed in 1.4587771892547607 seconds
Wrote graph to binary file in 0.031691789627075195 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.870849
After 2 runs, maximum modularity is Q = 0.87281
Louvain completed 22 runs in 0.6725709438323975 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.674525260925293 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.015106439590454102 seconds
Jaccard graph constructed in 1.5781652927398682 seconds
Wrote graph to binary file in 0.03357219696044922 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.881232
Louvain completed 21 runs in 0.632892370223999 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.749870777130127 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007990598678588867 seconds
Jaccard graph constructed in 0.9420397281646729 seconds
Wrote graph to binary file in 0.015244722366333008 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.824018
After 2 runs, maximum modularity is Q = 0.825324
After 4 runs, maximum modularity is Q = 0.828224
After 22 runs, maximum modularity is Q = 0.829337
Louvain completed 42 runs in 0.8741047382354736 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.439838409423828 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008302450180053711 seconds
Jaccard graph constructed in 0.9555649757385254 seconds
Wrote graph to binary file in 0.01629924774169922 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.836214
Louvain completed 21 runs in 0.4252948760986328 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.906630516052246 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007893085479736328 seconds
Jaccard graph constructed in 0.9157254695892334 seconds
Wrote graph to binary file in 0.014584779739379883 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.8262
After 5 runs, maximum modularity is Q = 0.827523
After 19 runs, maximum modularity is Q = 0.829431
Louvain completed 39 runs in 0.790515661239624 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.2709052562713623 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008215188980102539 seconds
Jaccard graph constructed in 0.9683060646057129 seconds
Wrote graph to binary file in 0.014424562454223633 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.820946
After 5 runs, maximum modularity is Q = 0.822519
After 19 runs, maximum modularity is Q = 0.824033
Louvain completed 39 runs in 0.7895684242248535 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.4172708988189697 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.026180744171142578 seconds
Jaccard graph constructed in 2.3311870098114014 seconds
Wrote graph to binary file in 0.06597137451171875 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.902696
Louvain completed 21 runs in 1.0342302322387695 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.9947926998138428 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.03020501136779785 seconds
Jaccard graph constructed in 2.578427791595459 seconds
Wrote graph to binary file in 0.07223176956176758 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.904394
After 4 runs, maximum modularity is Q = 0.906196
Louvain completed 24 runs in 1.3864455223083496 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.618868112564087 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02627730369567871 seconds
Jaccard graph constructed in 2.499687433242798 seconds
Wrote graph to binary file in 0.07054281234741211 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901182
After 2 runs, maximum modularity is Q = 0.902656
Louvain completed 22 runs in 1.1668496131896973 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.319972515106201 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.026494741439819336 seconds
Jaccard graph constructed in 2.36285662651062 seconds
Wrote graph to binary file in 0.06592226028442383 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901391
After 11 runs, maximum modularity is Q = 0.902587
