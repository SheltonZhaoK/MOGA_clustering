#########################BEGIN-PROLOG#########################
JobId             = 1781241
JobName           = clustering
UserId            = zhaok220(20487)
GroupId           = zhaok220(20487)
MCS_label         = N/A
Priority          = 92
Nice              = 0
Account           = khurigrp
QOS               = normal
Requeue           = 1
Restarts          = 0
BatchFlag         = 1
Reboot            = 0
ExitCode          = 0:0
RunTime           = 00:00:00
TimeLimit         = 7-00:00:00
TimeMin           = N/A
SubmitTime        = 2022-07-15T16:35:22
EligibleTime      = 2022-07-15T16:35:22
AccrueTime        = 2022-07-15T16:35:22
StartTime         = 2022-07-15T18:27:05
EndTime           = 2022-07-22T18:27:05
Deadline          = N/A
Partition         = medium
AllocNode:Sid     = gemini:40137
NodeList          = comp-08-5
BatchHost         = comp-08-5
NumNodes          = 1
NumCPUs           = 1
NumTasks          = 1
CPUs/Task         = 1
ReqB:S:C:T        = 0:0:*:*
TRES=cpu=1,mem=64G,node=1,billing= cpu=1,mem=64G,node=1,billing=1
Socks/Node        = *
NtasksPerN:B:S:C  = 1:0:*:*
CoreSpec          = *
MinCPUsNode       = 1
MinMemoryNode     = 64G
MinTmpDiskNode    = 0
Command           = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering.slurm
WorkDir           = /deac/csc/khuriGrp/zhaok220/clustering/slurm
StdErr            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1781241.e
StdOut            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1781241.o
Power             = 
MailUser          = zhaok220@wfu.edu
MailType          = BEGIN,END,FAIL
NtasksPerTRES:0   = NtasksPerTRES:0
###########################END-PROLOG#########################
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.00545811653137207 seconds
Jaccard graph constructed in 0.8179457187652588 seconds
Wrote graph to binary file in 0.009741544723510742 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.780995
After 3 runs, maximum modularity is Q = 0.782939
After 4 runs, maximum modularity is Q = 0.784125
After 6 runs, maximum modularity is Q = 0.78526
After 9 runs, maximum modularity is Q = 0.786829
Louvain completed 29 runs in 0.5083789825439453 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.8466908931732178 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.005169868469238281 seconds
Jaccard graph constructed in 0.7197401523590088 seconds
Wrote graph to binary file in 0.008271455764770508 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.783366
Louvain completed 21 runs in 0.2888216972351074 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.5573630332946777 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014762401580810547 seconds
Jaccard graph constructed in 1.592625379562378 seconds
Wrote graph to binary file in 0.032091379165649414 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.875871
After 6 runs, maximum modularity is Q = 0.877025
Louvain completed 26 runs in 0.7102537155151367 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.866705894470215 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.016881942749023438 seconds
Jaccard graph constructed in 2.0737383365631104 seconds
Wrote graph to binary file in 0.03625655174255371 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.876289
After 8 runs, maximum modularity is Q = 0.877421
Louvain completed 28 runs in 0.8303072452545166 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.489532709121704 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014538288116455078 seconds
Jaccard graph constructed in 1.6178364753723145 seconds
Wrote graph to binary file in 0.03201723098754883 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.871952
After 2 runs, maximum modularity is Q = 0.874986
After 7 runs, maximum modularity is Q = 0.876216
Louvain completed 27 runs in 0.7656383514404297 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.9457309246063232 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.016366243362426758 seconds
Jaccard graph constructed in 1.6798181533813477 seconds
Wrote graph to binary file in 0.03558540344238281 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.879315
Louvain completed 21 runs in 0.5900924205780029 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.917290449142456 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008343935012817383 seconds
Jaccard graph constructed in 1.0033533573150635 seconds
Wrote graph to binary file in 0.01544809341430664 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.828502
After 9 runs, maximum modularity is Q = 0.829965
Louvain completed 29 runs in 0.532944917678833 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.0732035636901855 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.00879979133605957 seconds
Jaccard graph constructed in 0.999075174331665 seconds
Wrote graph to binary file in 0.017411231994628906 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.838025
Louvain completed 21 runs in 0.41701459884643555 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.9907925128936768 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008203983306884766 seconds
Jaccard graph constructed in 1.1064684391021729 seconds
Wrote graph to binary file in 0.015189409255981445 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.826188
Louvain completed 21 runs in 0.3636136054992676 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.0064194202423096 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008322715759277344 seconds
Jaccard graph constructed in 1.0622515678405762 seconds
Wrote graph to binary file in 0.01626133918762207 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.814916
After 2 runs, maximum modularity is Q = 0.81859
After 5 runs, maximum modularity is Q = 0.822656
Louvain completed 25 runs in 0.5249736309051514 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.1636252403259277 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.029607295989990234 seconds
Jaccard graph constructed in 2.595682382583618 seconds
Wrote graph to binary file in 0.06603002548217773 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901764
After 8 runs, maximum modularity is Q = 0.902835
After 14 runs, maximum modularity is Q = 0.9039
Louvain completed 34 runs in 1.6380956172943115 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.879410743713379 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.032473087310791016 seconds
Jaccard graph constructed in 2.7998788356781006 seconds
Wrote graph to binary file in 0.07685685157775879 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.90392
Louvain completed 21 runs in 1.1003854274749756 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.570910215377808 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0298001766204834 seconds
Jaccard graph constructed in 2.5799524784088135 seconds
Wrote graph to binary file in 0.06746840476989746 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901609
After 4 runs, maximum modularity is Q = 0.903541
Louvain completed 24 runs in 1.154590129852295 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.426981449127197 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.03008294105529785 seconds
Jaccard graph constructed in 2.7690443992614746 seconds
Wrote graph to binary file in 0.06901097297668457 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901644
Louvain completed 21 runs in 0.9741506576538086 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.385134220123291 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.015767812728881836 seconds
Jaccard graph constructed in 1.6141786575317383 seconds
Wrote graph to binary file in 0.031464338302612305 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.877367
Louvain completed 21 runs in 0.5523741245269775 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.818542957305908 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01784038543701172 seconds
Jaccard graph constructed in 1.7576067447662354 seconds
Wrote graph to binary file in 0.03779006004333496 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.888195
After 2 runs, maximum modularity is Q = 0.890092
After 3 runs, maximum modularity is Q = 0.891217
Louvain completed 23 runs in 0.9697146415710449 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.425518751144409 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01472020149230957 seconds
Jaccard graph constructed in 1.5767488479614258 seconds
Wrote graph to binary file in 0.028076648712158203 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.875343
After 5 runs, maximum modularity is Q = 0.876453
After 12 runs, maximum modularity is Q = 0.877656
Louvain completed 32 runs in 1.0321433544158936 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.249758005142212 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.015333175659179688 seconds
Jaccard graph constructed in 1.6214475631713867 seconds
Wrote graph to binary file in 0.02929234504699707 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.880434
After 7 runs, maximum modularity is Q = 0.881498
After 21 runs, maximum modularity is Q = 0.882722
Louvain completed 41 runs in 1.049872875213623 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.2048845291137695 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02378106117248535 seconds
Jaccard graph constructed in 2.206920862197876 seconds
Wrote graph to binary file in 0.056806087493896484 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.90334
Louvain completed 21 runs in 0.8604786396026611 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.768860340118408 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02796626091003418 seconds
Jaccard graph constructed in 2.414154291152954 seconds
Wrote graph to binary file in 0.06539249420166016 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.907824
After 9 runs, maximum modularity is Q = 0.909124
Louvain completed 29 runs in 1.3358962535858154 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.356230020523071 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.026145219802856445 seconds
Jaccard graph constructed in 2.2486534118652344 seconds
Wrote graph to binary file in 0.05651998519897461 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.90061
Louvain completed 21 runs in 0.8761453628540039 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.72607421875 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.025573015213012695 seconds
Jaccard graph constructed in 2.4622159004211426 seconds
Wrote graph to binary file in 0.06632781028747559 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.904548
After 14 runs, maximum modularity is Q = 0.905889
Louvain completed 34 runs in 1.7110443115234375 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 5.054373741149902 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.016007661819458008 seconds
Jaccard graph constructed in 1.750730037689209 seconds
Wrote graph to binary file in 0.031809329986572266 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.873569
Louvain completed 21 runs in 0.6390211582183838 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.0007076263427734 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.017431259155273438 seconds
Jaccard graph constructed in 1.7461011409759521 seconds
Wrote graph to binary file in 0.038045406341552734 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.886249
After 3 runs, maximum modularity is Q = 0.88807
Louvain completed 23 runs in 0.7300856113433838 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.080068349838257 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014986276626586914 seconds
Jaccard graph constructed in 1.682830572128296 seconds
Wrote graph to binary file in 0.033037424087524414 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.873931
After 2 runs, maximum modularity is Q = 0.876817
After 4 runs, maximum modularity is Q = 0.87789
After 7 runs, maximum modularity is Q = 0.879151
Louvain completed 27 runs in 0.8874773979187012 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.35129451751709 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01629495620727539 seconds
Jaccard graph constructed in 1.730271339416504 seconds
Wrote graph to binary file in 0.03438901901245117 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.878731
After 3 runs, maximum modularity is Q = 0.880238
Louvain completed 23 runs in 0.7138493061065674 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.060237407684326 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.003694295883178711 seconds
Jaccard graph constructed in 0.595064640045166 seconds
Wrote graph to binary file in 0.0044574737548828125 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.717911
Louvain completed 21 runs in 0.25417160987854004 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.46067476272583 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0035736560821533203 seconds
Jaccard graph constructed in 0.6036925315856934 seconds
Wrote graph to binary file in 0.00383758544921875 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.670949
Louvain completed 21 runs in 0.2544715404510498 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4555158615112305 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.003616809844970703 seconds
Jaccard graph constructed in 0.5820138454437256 seconds
Wrote graph to binary file in 0.005000591278076172 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.686896
After 2 runs, maximum modularity is Q = 0.695475
Louvain completed 22 runs in 0.2985062599182129 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4466540813446045 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.00377655029296875 seconds
Jaccard graph constructed in 0.6105241775512695 seconds
Wrote graph to binary file in 0.004763126373291016 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.656759
After 2 runs, maximum modularity is Q = 0.659405
Louvain completed 22 runs in 0.28397107124328613 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4304285049438477 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.003679513931274414 seconds
Jaccard graph constructed in 0.6321451663970947 seconds
Wrote graph to binary file in 0.006411552429199219 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.683049
Louvain completed 21 runs in 0.258528470993042 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4281737804412842 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004273891448974609 seconds
Jaccard graph constructed in 0.6929681301116943 seconds
Wrote graph to binary file in 0.004882097244262695 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.654584
After 2 runs, maximum modularity is Q = 0.657669
After 3 runs, maximum modularity is Q = 0.659852
Louvain completed 23 runs in 0.35057759284973145 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.5691804885864258 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.002996683120727539 seconds
Jaccard graph constructed in 0.5965385437011719 seconds
Wrote graph to binary file in 0.0025680065155029297 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.496807
Louvain completed 21 runs in 0.23340320587158203 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4017889499664307 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0029730796813964844 seconds
Jaccard graph constructed in 0.5591130256652832 seconds
Wrote graph to binary file in 0.0030946731567382812 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.492017
Louvain completed 21 runs in 0.2948567867279053 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4665424823760986 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.003091573715209961 seconds
Jaccard graph constructed in 0.5823907852172852 seconds
Wrote graph to binary file in 0.0025322437286376953 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.499634
Louvain completed 21 runs in 0.24345993995666504 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.5247268676757812 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0028116703033447266 seconds
Jaccard graph constructed in 0.6687195301055908 seconds
Wrote graph to binary file in 0.002424001693725586 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.358391
Louvain completed 21 runs in 0.24979257583618164 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4647045135498047 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.002894163131713867 seconds
Jaccard graph constructed in 0.5384693145751953 seconds
Wrote graph to binary file in 0.002086162567138672 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.383167
Louvain completed 21 runs in 0.22270679473876953 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.264054536819458 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0021970272064208984 seconds
Jaccard graph constructed in 0.5757656097412109 seconds
Wrote graph to binary file in 0.002231597900390625 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.384724
Louvain completed 21 runs in 0.209031343460083 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.35756254196167 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004594564437866211 seconds
Jaccard graph constructed in 0.7163510322570801 seconds
Wrote graph to binary file in 0.0071451663970947266 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.783712
After 11 runs, maximum modularity is Q = 0.784834
After 12 runs, maximum modularity is Q = 0.785899
Louvain completed 32 runs in 0.45497751235961914 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.721611738204956 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004540443420410156 seconds
Jaccard graph constructed in 0.6831414699554443 seconds
Wrote graph to binary file in 0.007939577102661133 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.794775
After 16 runs, maximum modularity is Q = 0.795782
Louvain completed 36 runs in 0.4638185501098633 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.6987338066101074 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004324913024902344 seconds
Jaccard graph constructed in 0.6608569622039795 seconds
Wrote graph to binary file in 0.007082462310791016 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.78363
After 3 runs, maximum modularity is Q = 0.785294
After 10 runs, maximum modularity is Q = 0.786422
Louvain completed 30 runs in 0.4196889400482178 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.6073949337005615 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0041484832763671875 seconds
Jaccard graph constructed in 0.6551957130432129 seconds
Wrote graph to binary file in 0.00713038444519043 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.783125
Louvain completed 21 runs in 0.2635371685028076 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4768972396850586 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004297733306884766 seconds
Jaccard graph constructed in 0.6495404243469238 seconds
Wrote graph to binary file in 0.007096290588378906 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.799121
After 3 runs, maximum modularity is Q = 0.800336
Louvain completed 23 runs in 0.29701757431030273 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4314756393432617 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004305601119995117 seconds
Jaccard graph constructed in 0.6259007453918457 seconds
Wrote graph to binary file in 0.0070607662200927734 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.769663
After 11 runs, maximum modularity is Q = 0.771167
Louvain completed 31 runs in 0.392117977142334 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.5894107818603516 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0044596195220947266 seconds
Jaccard graph constructed in 0.6671619415283203 seconds
Wrote graph to binary file in 0.00742793083190918 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.786286
After 2 runs, maximum modularity is Q = 0.791264
Louvain completed 22 runs in 0.2891218662261963 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.5469388961791992 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.00448298454284668 seconds
Jaccard graph constructed in 0.6977376937866211 seconds
Wrote graph to binary file in 0.007323503494262695 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.775955
After 2 runs, maximum modularity is Q = 0.778849
After 4 runs, maximum modularity is Q = 0.782559
Louvain completed 24 runs in 0.3467683792114258 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.5855696201324463 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004431247711181641 seconds
Jaccard graph constructed in 0.6366136074066162 seconds
Wrote graph to binary file in 0.007332801818847656 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.778965
After 2 runs, maximum modularity is Q = 0.781148
Louvain completed 22 runs in 0.28980445861816406 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.460974931716919 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0042572021484375 seconds
Jaccard graph constructed in 0.7359118461608887 seconds
Wrote graph to binary file in 0.00731968879699707 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.774702
Louvain completed 21 runs in 0.25048208236694336 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4690062999725342 seconds
/deac/csc/khuriGrp/zhaok220/clustering/data/scrna_benchmarks_umap/ICELL8_SE_A_kallisto_umap.csv
-- Begin evolution --
-- Generation 1 --
-- Generation 2 --
-- Generation 3 --
-- Generation 4 --
-- Generation 5 --
-- Generation 6 --
-- Generation 7 --
-- Generation 8 --
-- Generation 9 --
-- Generation 10 --
-- Generation 11 --
-- Generation 12 --
-- Generation 13 --
-- Generation 14 --
-- Generation 15 --
-- Generation 16 --
-- Generation 17 --
-- Generation 18 --
-- Generation 19 --
-- Generation 20 --
-- Generation 21 --
-- Generation 22 --
-- Generation 23 --
-- Generation 24 --
-- Generation 25 --
-- Generation 26 --
-- Generation 27 --
-- Generation 28 --
-- Generation 29 --
-- Generation 30 --
-- Generation 31 --
-- Generation 32 --
-- Generation 33 --
-- Generation 34 --
-- Generation 35 --
-- Generation 36 --
-- Generation 37 --
-- Generation 38 --
-- Generation 39 --
-- Generation 40 --
-- Generation 41 --
-- Generation 42 --
-- Generation 43 --
-- Generation 44 --
-- Generation 45 --
-- Generation 46 --
-- Generation 47 --
-- Generation 48 --
-- Generation 49 --
-- Generation 50 --
-- Generation 51 --
-- Generation 52 --
-- Generation 53 --
-- Generation 54 --
-- Generation 55 --
-- Generation 56 --
-- Generation 57 --
-- Generation 58 --
-- Generation 59 --
-- Generation 60 --
-- Generation 61 --
-- Generation 62 --
-- Generation 63 --
-- Generation 64 --
-- Generation 65 --
-- Generation 66 --
-- Generation 67 --
-- Generation 68 --
-- Generation 69 --
-- Generation 70 --
-- Generation 71 --
-- Generation 72 --
-- Generation 73 --
-- Generation 74 --
-- Generation 75 --
-- Generation 76 --
-- Generation 77 --
-- Generation 78 --
-- Generation 79 --
-- Generation 80 --
-- Generation 81 --
-- Generation 82 --
-- Generation 83 --
-- Generation 84 --
-- Generation 85 --
-- Generation 86 --
-- Generation 87 --
-- Generation 88 --
-- Generation 89 --
-- Generation 90 --
-- Generation 91 --
-- Generation 92 --
-- Generation 93 --
-- Generation 94 --
-- Generation 95 --
-- Generation 96 --
-- Generation 97 --
-- Generation 98 --
-- Generation 99 --
-- Generation 100 --
-- Generation 101 --
-- Generation 102 --
-- Generation 103 --
-- Generation 104 --
-- Generation 105 --
-- Generation 106 --
-- Generation 107 --
-- Generation 108 --
-- Generation 109 --
-- Generation 110 --
-- Generation 111 --
-- Generation 112 --
-- Generation 113 --
-- Generation 114 --
-- Generation 115 --
-- Generation 116 --
-- Generation 117 --
-- Generation 118 --
-- Generation 119 --
-- Generation 120 --
-- Generation 121 --
-- Generation 122 --
-- Generation 123 --
-- Generation 124 --
-- Generation 125 --
-- Generation 126 --
-- Generation 127 --
-- Generation 128 --
-- Generation 129 --
-- Generation 130 --
-- Generation 131 --
-- Generation 132 --
-- Generation 133 --
-- Generation 134 --
-- Generation 135 --
-- Generation 136 --
-- Generation 137 --
-- Generation 138 --
-- Generation 139 --
-- Generation 140 --
-- Generation 141 --
-- Generation 142 --
-- Generation 143 --
-- Generation 144 --
-- Generation 145 --
-- Generation 146 --
-- Generation 147 --
-- Generation 148 --
-- Generation 149 --
-- Generation 150 --
-- Generation 151 --
-- Generation 152 --
-- Generation 153 --
-- Generation 154 --
-- Generation 155 --
-- Generation 156 --
-- Generation 157 --
-- Generation 158 --
-- Generation 159 --
-- Generation 160 --
-- Generation 161 --
-- Generation 162 --
-- Generation 163 --
-- Generation 164 --
-- Generation 165 --
-- Generation 166 --
-- Generation 167 --
-- Generation 168 --
-- Generation 169 --
-- Generation 170 --
-- Generation 171 --
-- Generation 172 --
-- Generation 173 --
-- Generation 174 --
-- Generation 175 --
-- Generation 176 --
-- Generation 177 --
-- Generation 178 --
-- Generation 179 --
-- Generation 180 --
-- Generation 181 --
-- Generation 182 --
-- Generation 183 --
-- Generation 184 --
-- Generation 185 --
-- Generation 186 --
-- Generation 187 --
-- Generation 188 --
-- Generation 189 --
-- Generation 190 --
-- Generation 191 --
-- Generation 192 --
-- Generation 193 --
-- Generation 194 --
-- Generation 195 --
-- Generation 196 --
-- Generation 197 --
-- Generation 198 --
-- Generation 199 --
-- Generation 200 --
-- Generation 201 --
-- Generation 202 --
-- Generation 203 --
-- Generation 204 --
-- Generation 205 --
-- Generation 206 --
-- Generation 207 --
-- Generation 208 --
-- Generation 209 --
-- Generation 210 --
-- Generation 211 --
-- Generation 212 --
-- Generation 213 --
-- Generation 214 --
-- Generation 215 --
-- Generation 216 --
-- Generation 217 --
-- Generation 218 --
-- Generation 219 --
-- Generation 220 --
-- Generation 221 --
-- Generation 222 --
-- Generation 223 --
-- Generation 224 --
-- Generation 225 --
-- Generation 226 --
-- Generation 227 --
-- Generation 228 --
-- Generation 229 --
-- Generation 230 --
-- Generation 231 --
-- Generation 232 --
-- Generation 233 --
-- Generation 234 --
-- Generation 235 --
-- Generation 236 --
-- Generation 237 --
-- Generation 238 --
-- Generation 239 --
-- Generation 240 --
-- Generation 241 --
-- Generation 242 --
-- Generation 243 --
-- Generation 244 --
-- Generation 245 --
-- Generation 246 --
-- Generation 247 --
-- Generation 248 --
-- Generation 249 --
-- Generation 250 --
-- Generation 251 --
-- Generation 252 --
-- Generation 253 --
-- Generation 254 --
-- Generation 255 --
-- Generation 256 --
-- Generation 257 --
-- Generation 258 --
-- Generation 259 --
-- Generation 260 --
-- Generation 261 --
-- Generation 262 --
-- Generation 263 --
-- Generation 264 --
-- Generation 265 --
-- Generation 266 --
-- Generation 267 --
-- Generation 268 --
-- Generation 269 --
-- Generation 270 --
-- Generation 271 --
-- Generation 272 --
-- Generation 273 --
-- Generation 274 --
-- Generation 275 --
-- Generation 276 --
-- Generation 277 --
-- Generation 278 --
-- Generation 279 --
-- Generation 280 --
-- Generation 281 --
-- Generation 282 --
-- Generation 283 --
-- Generation 284 --
-- Generation 285 --
-- Generation 286 --
-- Generation 287 --
-- Generation 288 --
-- Generation 289 --
-- Generation 290 --
-- Generation 291 --
-- Generation 292 --
-- Generation 293 --
-- Generation 294 --
-- Generation 295 --
-- Generation 296 --
-- Generation 297 --
-- Generation 298 --
-- Generation 299 --
-- Generation 300 --
-- Generation 301 --
-- Generation 302 --
-- Generation 303 --
-- Generation 304 --
-- Generation 305 --
-- Generation 306 --
-- Generation 307 --
-- Generation 308 --
-- Generation 309 --
-- Generation 310 --
-- Generation 311 --
-- Generation 312 --
-- Generation 313 --
-- Generation 314 --
-- Generation 315 --
-- Generation 316 --
-- Generation 317 --
-- Generation 318 --
-- Generation 319 --
-- Generation 320 --
-- Generation 321 --
-- Generation 322 --
-- Generation 323 --
-- Generation 324 --
-- Generation 325 --
-- Generation 326 --
-- Generation 327 --
-- Generation 328 --
-- Generation 329 --
-- Generation 330 --
-- Generation 331 --
-- Generation 332 --
-- Generation 333 --
-- Generation 334 --
-- Generation 335 --
-- Generation 336 --
-- Generation 337 --
-- Generation 338 --
-- Generation 339 --
-- Generation 340 --
-- Generation 341 --
-- Generation 342 --
-- Generation 343 --
-- Generation 344 --
-- Generation 345 --
-- Generation 346 --
-- Generation 347 --
-- Generation 348 --
-- Generation 349 --
-- Generation 350 --
-- End of (successful) evolution --
Max memory consumption for Job 1781241 on host comp-08-5 is: 662970368.0B
