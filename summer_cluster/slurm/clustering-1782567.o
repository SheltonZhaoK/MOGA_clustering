#########################BEGIN-PROLOG#########################
JobId             = 1782567
JobName           = clustering
UserId            = zhaok220(20487)
GroupId           = zhaok220(20487)
MCS_label         = N/A
Priority          = 92
Nice              = 0
Account           = khurigrp
QOS               = normal
Requeue           = 1
Restarts          = 0
BatchFlag         = 1
Reboot            = 0
ExitCode          = 0:0
RunTime           = 00:00:00
TimeLimit         = 7-00:00:00
TimeMin           = N/A
SubmitTime        = 2022-07-21T10:25:09
EligibleTime      = 2022-07-21T10:25:09
AccrueTime        = 2022-07-21T10:25:09
StartTime         = 2022-07-21T10:25:10
EndTime           = 2022-07-28T10:25:10
Deadline          = N/A
Partition         = medium
AllocNode:Sid     = gemini:148414
NodeList          = comp-21-6
BatchHost         = comp-21-6
NumNodes          = 1
NumCPUs           = 1
NumTasks          = 1
CPUs/Task         = 1
ReqB:S:C:T        = 0:0:*:*
TRES=cpu=1,mem=64G,node=1,billing= cpu=1,mem=64G,node=1,billing=1
Socks/Node        = *
NtasksPerN:B:S:C  = 1:0:*:*
CoreSpec          = *
MinCPUsNode       = 1
MinMemoryNode     = 64G
MinTmpDiskNode    = 0
Command           = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering.slurm
WorkDir           = /deac/csc/khuriGrp/zhaok220/clustering/slurm
StdErr            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1782567.e
StdOut            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1782567.o
Power             = 
MailUser          = zhaok220@wfu.edu
MailType          = BEGIN,END,FAIL
NtasksPerTRES:0   = NtasksPerTRES:0
###########################END-PROLOG#########################
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.005507469177246094 seconds
Jaccard graph constructed in 0.9412643909454346 seconds
Wrote graph to binary file in 0.01011204719543457 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.779026
After 2 runs, maximum modularity is Q = 0.785996
Louvain completed 22 runs in 0.49994802474975586 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.2331409454345703 seconds
9
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.005187511444091797 seconds
Jaccard graph constructed in 0.7253401279449463 seconds
Wrote graph to binary file in 0.008984088897705078 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.780002
After 4 runs, maximum modularity is Q = 0.781123
After 5 runs, maximum modularity is Q = 0.783182
Louvain completed 25 runs in 0.38576817512512207 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.6002941131591797 seconds
11
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014241218566894531 seconds
Jaccard graph constructed in 1.4939110279083252 seconds
Wrote graph to binary file in 0.03186607360839844 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.875855
After 13 runs, maximum modularity is Q = 0.877772
Louvain completed 33 runs in 0.822627067565918 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.8690013885498047 seconds
20
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.015277624130249023 seconds
Jaccard graph constructed in 1.4080207347869873 seconds
Wrote graph to binary file in 0.03681755065917969 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.876457
After 13 runs, maximum modularity is Q = 0.878643
Louvain completed 33 runs in 0.9739291667938232 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.013310194015503 seconds
21
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01542973518371582 seconds
Jaccard graph constructed in 1.7965493202209473 seconds
Wrote graph to binary file in 0.0334630012512207 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.873457
After 2 runs, maximum modularity is Q = 0.87668
Louvain completed 22 runs in 0.9124279022216797 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.355689287185669 seconds
19
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01650691032409668 seconds
Jaccard graph constructed in 1.8697781562805176 seconds
Wrote graph to binary file in 0.038107872009277344 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.878169
After 3 runs, maximum modularity is Q = 0.879966
Louvain completed 23 runs in 0.9488911628723145 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.837372303009033 seconds
20
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008353710174560547 seconds
Jaccard graph constructed in 1.2856807708740234 seconds
Wrote graph to binary file in 0.017305374145507812 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.826888
After 6 runs, maximum modularity is Q = 0.829271
Louvain completed 26 runs in 0.8188974857330322 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.3166844844818115 seconds
13
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.009166955947875977 seconds
Jaccard graph constructed in 1.3449902534484863 seconds
Wrote graph to binary file in 0.01896214485168457 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.836562
After 2 runs, maximum modularity is Q = 0.838128
After 9 runs, maximum modularity is Q = 0.839417
Louvain completed 29 runs in 1.0380756855010986 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.311677932739258 seconds
15
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008054018020629883 seconds
Jaccard graph constructed in 1.354109764099121 seconds
Wrote graph to binary file in 0.017519235610961914 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.824877
After 2 runs, maximum modularity is Q = 0.826247
Louvain completed 22 runs in 0.8517513275146484 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.0153086185455322 seconds
14
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008481264114379883 seconds
Jaccard graph constructed in 1.3428819179534912 seconds
Wrote graph to binary file in 0.017611026763916016 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.817779
After 3 runs, maximum modularity is Q = 0.82146
Louvain completed 23 runs in 0.7539913654327393 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.956817388534546 seconds
14
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.03867602348327637 seconds
Jaccard graph constructed in 3.0821826457977295 seconds
Wrote graph to binary file in 0.0746009349822998 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.902148
After 2 runs, maximum modularity is Q = 0.903675
Louvain completed 22 runs in 1.3570551872253418 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 5.504205703735352 seconds
27
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.03435397148132324 seconds
Jaccard graph constructed in 3.3789846897125244 seconds
Wrote graph to binary file in 0.07797837257385254 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.902074
After 3 runs, maximum modularity is Q = 0.903876
After 18 runs, maximum modularity is Q = 0.905033
Louvain completed 38 runs in 2.5481574535369873 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 7.037362098693848 seconds
29
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.029839754104614258 seconds
Jaccard graph constructed in 3.2530479431152344 seconds
Wrote graph to binary file in 0.06967282295227051 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.902268
After 2 runs, maximum modularity is Q = 0.903434
Louvain completed 22 runs in 1.2567453384399414 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 5.2338268756866455 seconds
29
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02921009063720703 seconds
Jaccard graph constructed in 2.641493082046509 seconds
Wrote graph to binary file in 0.06717801094055176 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.90054
After 2 runs, maximum modularity is Q = 0.901951
Louvain completed 22 runs in 1.3594486713409424 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.703827381134033 seconds
26
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014532327651977539 seconds
Jaccard graph constructed in 1.6639623641967773 seconds
Wrote graph to binary file in 0.03200387954711914 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.874761
After 2 runs, maximum modularity is Q = 0.877744
Louvain completed 22 runs in 0.6319193840026855 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.8842811584472656 seconds
20
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01712489128112793 seconds
Jaccard graph constructed in 1.7301347255706787 seconds
Wrote graph to binary file in 0.038312673568725586 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.890807
After 19 runs, maximum modularity is Q = 0.892331
Louvain completed 39 runs in 1.2947795391082764 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.6180946826934814 seconds
24
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014651775360107422 seconds
Jaccard graph constructed in 1.6529309749603271 seconds
Wrote graph to binary file in 0.03395509719848633 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.87477
After 2 runs, maximum modularity is Q = 0.876124
After 3 runs, maximum modularity is Q = 0.877777
Louvain completed 23 runs in 0.731022834777832 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.99520206451416 seconds
21
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01567244529724121 seconds
Jaccard graph constructed in 1.6670103073120117 seconds
Wrote graph to binary file in 0.036461830139160156 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.881728
Louvain completed 21 runs in 0.6621801853179932 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.965806007385254 seconds
21
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.028421640396118164 seconds
Jaccard graph constructed in 2.5948474407196045 seconds
Wrote graph to binary file in 0.06754183769226074 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.902495
After 15 runs, maximum modularity is Q = 0.903633
Louvain completed 35 runs in 1.8917310237884521 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 5.174538612365723 seconds
25
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.03135395050048828 seconds
Jaccard graph constructed in 3.167407512664795 seconds
Wrote graph to binary file in 0.08063054084777832 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.907292
After 3 runs, maximum modularity is Q = 0.908781
Louvain completed 23 runs in 1.52717924118042 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 5.4160661697387695 seconds
28
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.027855396270751953 seconds
Jaccard graph constructed in 2.5945682525634766 seconds
Wrote graph to binary file in 0.06738877296447754 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.899915
After 5 runs, maximum modularity is Q = 0.901192
Louvain completed 25 runs in 1.5333061218261719 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.789906024932861 seconds
27
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.028380155563354492 seconds
Jaccard graph constructed in 2.6317198276519775 seconds
Wrote graph to binary file in 0.06990528106689453 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.902866
After 2 runs, maximum modularity is Q = 0.904971
After 5 runs, maximum modularity is Q = 0.905979
Louvain completed 25 runs in 1.4346818923950195 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.756667375564575 seconds
26
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.018530845642089844 seconds
Jaccard graph constructed in 1.6910231113433838 seconds
Wrote graph to binary file in 0.03290271759033203 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.871103
After 3 runs, maximum modularity is Q = 0.872439
After 5 runs, maximum modularity is Q = 0.8757
Louvain completed 25 runs in 1.2546703815460205 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.9587292671203613 seconds
20
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.017650127410888672 seconds
Jaccard graph constructed in 2.012770891189575 seconds
Wrote graph to binary file in 0.041466712951660156 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.885335
After 2 runs, maximum modularity is Q = 0.887707
Louvain completed 22 runs in 1.0197608470916748 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.048316955566406 seconds
24
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.015616655349731445 seconds
Jaccard graph constructed in 2.075712203979492 seconds
Wrote graph to binary file in 0.03624129295349121 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.877691
After 12 runs, maximum modularity is Q = 0.878719
Louvain completed 32 runs in 1.3263096809387207 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.356870174407959 seconds
18
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.016208648681640625 seconds
Jaccard graph constructed in 2.0621304512023926 seconds
Wrote graph to binary file in 0.039530038833618164 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.880476
Louvain completed 21 runs in 0.8805482387542725 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.963092565536499 seconds
22
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.003850221633911133 seconds
Jaccard graph constructed in 0.9962637424468994 seconds
Wrote graph to binary file in 0.005796670913696289 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.716878
After 4 runs, maximum modularity is Q = 0.717911
Louvain completed 24 runs in 0.4092540740966797 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.9599494934082031 seconds
5
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.003463268280029297 seconds
Jaccard graph constructed in 0.6983423233032227 seconds
Wrote graph to binary file in 0.005033731460571289 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.670011
After 3 runs, maximum modularity is Q = 0.672555
Louvain completed 23 runs in 0.32367396354675293 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.6208837032318115 seconds
5
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0035653114318847656 seconds
Jaccard graph constructed in 0.6866116523742676 seconds
Wrote graph to binary file in 0.005289554595947266 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.695475
Louvain completed 21 runs in 0.28028321266174316 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.5266902446746826 seconds
5
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0037500858306884766 seconds
Jaccard graph constructed in 0.6233024597167969 seconds
Wrote graph to binary file in 0.0059545040130615234 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.657133
After 3 runs, maximum modularity is Q = 0.660026
After 4 runs, maximum modularity is Q = 0.661379
Louvain completed 24 runs in 0.4201679229736328 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.0464863777160645 seconds
6
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0038115978240966797 seconds
Jaccard graph constructed in 1.0393707752227783 seconds
Wrote graph to binary file in 0.005830526351928711 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.683318
Louvain completed 21 runs in 0.38087892532348633 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.37969708442688 seconds
6
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0037508010864257812 seconds
Jaccard graph constructed in 1.0114822387695312 seconds
Wrote graph to binary file in 0.006209611892700195 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.655212
After 2 runs, maximum modularity is Q = 0.656893
After 3 runs, maximum modularity is Q = 0.659446
Louvain completed 23 runs in 0.580111026763916 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.558941602706909 seconds
6
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004138946533203125 seconds
Jaccard graph constructed in 0.9290544986724854 seconds
Wrote graph to binary file in 0.0038847923278808594 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.496807
Louvain completed 21 runs in 0.478985071182251 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.2193667888641357 seconds
2
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.003124713897705078 seconds
Jaccard graph constructed in 0.967764139175415 seconds
Wrote graph to binary file in 0.005869865417480469 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.492017
Louvain completed 21 runs in 0.611119270324707 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.389277696609497 seconds
2
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.002956390380859375 seconds
Jaccard graph constructed in 0.5988829135894775 seconds
Wrote graph to binary file in 0.0032265186309814453 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.499634
Louvain completed 21 runs in 0.28707003593444824 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4615285396575928 seconds
2
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.003618478775024414 seconds
Jaccard graph constructed in 0.572441577911377 seconds
Wrote graph to binary file in 0.003069162368774414 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.358391
Louvain completed 21 runs in 0.2834036350250244 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4695682525634766 seconds
3
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0026388168334960938 seconds
Jaccard graph constructed in 0.5811443328857422 seconds
Wrote graph to binary file in 0.0030956268310546875 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.383167
Louvain completed 21 runs in 0.26866936683654785 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.46108078956604 seconds
3
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.002764463424682617 seconds
Jaccard graph constructed in 0.6443133354187012 seconds
Wrote graph to binary file in 0.003161191940307617 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.384724
Louvain completed 21 runs in 0.38575196266174316 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.6223785877227783 seconds
3
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.006108999252319336 seconds
Jaccard graph constructed in 0.8266725540161133 seconds
Wrote graph to binary file in 0.009975910186767578 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.78345
Louvain completed 21 runs in 0.3573453426361084 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.8309941291809082 seconds
9
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.00513148307800293 seconds
Jaccard graph constructed in 0.8247764110565186 seconds
Wrote graph to binary file in 0.008963584899902344 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.79597
Louvain completed 21 runs in 0.3333780765533447 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.8165655136108398 seconds
10
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.006476879119873047 seconds
Jaccard graph constructed in 0.7702233791351318 seconds
Wrote graph to binary file in 0.019117116928100586 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.786756
Louvain completed 21 runs in 0.3677201271057129 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.7672278881072998 seconds
9
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0049207210540771484 seconds
Jaccard graph constructed in 0.7701375484466553 seconds
Wrote graph to binary file in 0.00892329216003418 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.781576
After 5 runs, maximum modularity is Q = 0.783806
After 6 runs, maximum modularity is Q = 0.784826
Louvain completed 26 runs in 1.0907166004180908 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.9536869525909424 seconds
9
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.005186319351196289 seconds
Jaccard graph constructed in 1.1116116046905518 seconds
Wrote graph to binary file in 0.00927424430847168 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.798179
After 4 runs, maximum modularity is Q = 0.800121
Louvain completed 24 runs in 0.7011103630065918 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.780512571334839 seconds
10
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.005068063735961914 seconds
Jaccard graph constructed in 1.1421887874603271 seconds
Wrote graph to binary file in 0.009621620178222656 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.765908
After 2 runs, maximum modularity is Q = 0.769339
After 5 runs, maximum modularity is Q = 0.770931
Louvain completed 25 runs in 0.7947680950164795 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.928318738937378 seconds
8
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.005136728286743164 seconds
Jaccard graph constructed in 1.020573377609253 seconds
Wrote graph to binary file in 0.009964227676391602 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.790427
Louvain completed 21 runs in 0.5767152309417725 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.6102921962738037 seconds
9
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.005072355270385742 seconds
Jaccard graph constructed in 1.0530872344970703 seconds
Wrote graph to binary file in 0.009474754333496094 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.780123
After 9 runs, maximum modularity is Q = 0.782324
After 26 runs, maximum modularity is Q = 0.783458
Louvain completed 46 runs in 1.2650651931762695 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.3671746253967285 seconds
10
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0050737857818603516 seconds
Jaccard graph constructed in 1.1507959365844727 seconds
Wrote graph to binary file in 0.010224103927612305 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.774636
After 3 runs, maximum modularity is Q = 0.781555
Louvain completed 23 runs in 1.0028069019317627 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.9843807220458984 seconds
9
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0053980350494384766 seconds
Jaccard graph constructed in 1.1411619186401367 seconds
Wrote graph to binary file in 0.01131749153137207 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.775508
Louvain completed 21 runs in 0.5731930732727051 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.5371665954589844 seconds
10
[4, 5, 7, 7, 7, 7, 5, 6, 6, 6, 9, 10, 10, 9, 7, 8, 7, 7, 8, 9, 9, 9, 7, 8, 7, 8, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 5, 4, 4, 5, 4, 4, 5, 4, 5]
/deac/csc/khuriGrp/zhaok220/clustering/data/scrna_benchmarks_umap/ICELL8_SE_A_kallisto_umap.csv
-- Begin evolution --
-- Generation 1 --
-- Generation 2 --
-- Generation 3 --
-- Generation 4 --
-- Generation 5 --
-- Generation 6 --
-- Generation 7 --
-- Generation 8 --
-- Generation 9 --
-- Generation 10 --
-- Generation 11 --
-- Generation 12 --
-- Generation 13 --
-- Generation 14 --
-- Generation 15 --
-- Generation 16 --
-- Generation 17 --
-- Generation 18 --
-- Generation 19 --
-- Generation 20 --
-- Generation 21 --
-- Generation 22 --
-- Generation 23 --
-- Generation 24 --
-- Generation 25 --
-- Generation 26 --
-- Generation 27 --
-- Generation 28 --
-- Generation 29 --
-- Generation 30 --
-- Generation 31 --
-- Generation 32 --
-- Generation 33 --
-- Generation 34 --
-- Generation 35 --
-- Generation 36 --
-- Generation 37 --
-- Generation 38 --
-- Generation 39 --
-- Generation 40 --
-- Generation 41 --
-- Generation 42 --
-- Generation 43 --
-- Generation 44 --
-- Generation 45 --
-- Generation 46 --
-- Generation 47 --
-- Generation 48 --
-- Generation 49 --
-- Generation 50 --
-- Generation 51 --
-- Generation 52 --
-- Generation 53 --
-- Generation 54 --
-- Generation 55 --
-- Generation 56 --
-- Generation 57 --
-- Generation 58 --
-- Generation 59 --
-- Generation 60 --
-- Generation 61 --
-- Generation 62 --
-- Generation 63 --
-- Generation 64 --
-- Generation 65 --
-- Generation 66 --
-- Generation 67 --
-- Generation 68 --
-- Generation 69 --
-- Generation 70 --
-- Generation 71 --
-- Generation 72 --
-- Generation 73 --
-- Generation 74 --
-- Generation 75 --
-- Generation 76 --
-- Generation 77 --
-- Generation 78 --
-- Generation 79 --
-- Generation 80 --
-- Generation 81 --
-- Generation 82 --
-- Generation 83 --
-- Generation 84 --
-- Generation 85 --
-- Generation 86 --
-- Generation 87 --
-- Generation 88 --
-- Generation 89 --
-- Generation 90 --
-- Generation 91 --
-- Generation 92 --
-- Generation 93 --
-- Generation 94 --
-- Generation 95 --
-- Generation 96 --
-- Generation 97 --
-- Generation 98 --
-- Generation 99 --
-- Generation 100 --
-- Generation 101 --
-- Generation 102 --
-- Generation 103 --
-- Generation 104 --
-- Generation 105 --
-- Generation 106 --
-- Generation 107 --
-- Generation 108 --
-- Generation 109 --
-- Generation 110 --
-- Generation 111 --
-- Generation 112 --
-- Generation 113 --
-- Generation 114 --
-- Generation 115 --
-- Generation 116 --
-- Generation 117 --
-- Generation 118 --
-- Generation 119 --
-- Generation 120 --
-- Generation 121 --
-- Generation 122 --
-- Generation 123 --
-- Generation 124 --
-- Generation 125 --
-- Generation 126 --
-- Generation 127 --
-- Generation 128 --
-- Generation 129 --
-- Generation 130 --
-- Generation 131 --
-- Generation 132 --
-- Generation 133 --
-- Generation 134 --
-- Generation 135 --
-- Generation 136 --
-- Generation 137 --
-- Generation 138 --
-- Generation 139 --
-- Generation 140 --
-- Generation 141 --
-- Generation 142 --
-- Generation 143 --
-- Generation 144 --
-- Generation 145 --
-- Generation 146 --
-- Generation 147 --
-- Generation 148 --
-- Generation 149 --
-- Generation 150 --
-- Generation 151 --
-- Generation 152 --
-- Generation 153 --
-- Generation 154 --
-- Generation 155 --
-- Generation 156 --
-- Generation 157 --
-- Generation 158 --
-- Generation 159 --
-- Generation 160 --
-- Generation 161 --
-- Generation 162 --
-- Generation 163 --
-- Generation 164 --
-- Generation 165 --
-- Generation 166 --
-- Generation 167 --
-- Generation 168 --
-- Generation 169 --
-- Generation 170 --
-- Generation 171 --
-- Generation 172 --
-- Generation 173 --
-- Generation 174 --
-- Generation 175 --
-- Generation 176 --
-- Generation 177 --
-- Generation 178 --
-- Generation 179 --
-- Generation 180 --
-- Generation 181 --
-- Generation 182 --
-- Generation 183 --
-- Generation 184 --
-- Generation 185 --
-- Generation 186 --
-- Generation 187 --
-- Generation 188 --
-- Generation 189 --
-- Generation 190 --
-- Generation 191 --
-- Generation 192 --
-- Generation 193 --
-- Generation 194 --
-- Generation 195 --
-- Generation 196 --
-- Generation 197 --
-- Generation 198 --
-- Generation 199 --
-- Generation 200 --
-- Generation 201 --
-- Generation 202 --
-- Generation 203 --
-- Generation 204 --
-- Generation 205 --
-- Generation 206 --
-- Generation 207 --
-- Generation 208 --
-- Generation 209 --
-- Generation 210 --
-- Generation 211 --
-- Generation 212 --
-- Generation 213 --
-- Generation 214 --
-- Generation 215 --
-- Generation 216 --
-- Generation 217 --
-- Generation 218 --
-- Generation 219 --
-- Generation 220 --
-- Generation 221 --
-- Generation 222 --
-- Generation 223 --
-- Generation 224 --
-- Generation 225 --
-- Generation 226 --
-- Generation 227 --
-- Generation 228 --
-- Generation 229 --
-- Generation 230 --
-- Generation 231 --
-- Generation 232 --
-- Generation 233 --
-- Generation 234 --
-- Generation 235 --
-- Generation 236 --
-- Generation 237 --
-- Generation 238 --
-- Generation 239 --
-- Generation 240 --
-- Generation 241 --
-- Generation 242 --
-- Generation 243 --
-- Generation 244 --
-- Generation 245 --
-- Generation 246 --
-- Generation 247 --
-- Generation 248 --
-- Generation 249 --
-- Generation 250 --
-- Generation 251 --
-- Generation 252 --
-- Generation 253 --
-- Generation 254 --
-- Generation 255 --
-- Generation 256 --
-- Generation 257 --
-- Generation 258 --
-- Generation 259 --
-- Generation 260 --
-- Generation 261 --
-- Generation 262 --
-- Generation 263 --
-- Generation 264 --
-- Generation 265 --
-- Generation 266 --
-- Generation 267 --
-- Generation 268 --
-- Generation 269 --
-- Generation 270 --
-- Generation 271 --
-- Generation 272 --
-- Generation 273 --
-- Generation 274 --
-- Generation 275 --
-- Generation 276 --
-- Generation 277 --
-- Generation 278 --
-- Generation 279 --
-- Generation 280 --
-- Generation 281 --
-- Generation 282 --
-- Generation 283 --
-- Generation 284 --
-- Generation 285 --
-- Generation 286 --
-- Generation 287 --
-- Generation 288 --
-- Generation 289 --
-- Generation 290 --
-- Generation 291 --
-- Generation 292 --
-- Generation 293 --
-- Generation 294 --
-- Generation 295 --
-- Generation 296 --
-- Generation 297 --
-- Generation 298 --
-- Generation 299 --
-- Generation 300 --
-- Generation 301 --
-- Generation 302 --
-- Generation 303 --
-- Generation 304 --
-- Generation 305 --
-- Generation 306 --
-- Generation 307 --
-- Generation 308 --
-- Generation 309 --
-- Generation 310 --
-- Generation 311 --
-- Generation 312 --
-- Generation 313 --
-- Generation 314 --
-- Generation 315 --
-- Generation 316 --
-- Generation 317 --
-- Generation 318 --
-- Generation 319 --
-- Generation 320 --
-- Generation 321 --
-- Generation 322 --
-- Generation 323 --
-- Generation 324 --
-- Generation 325 --
-- Generation 326 --
-- Generation 327 --
-- Generation 328 --
-- Generation 329 --
-- Generation 330 --
-- Generation 331 --
-- Generation 332 --
-- Generation 333 --
-- Generation 334 --
-- Generation 335 --
-- Generation 336 --
-- Generation 337 --
-- Generation 338 --
-- Generation 339 --
-- Generation 340 --
-- Generation 341 --
-- Generation 342 --
-- Generation 343 --
-- Generation 344 --
-- Generation 345 --
-- Generation 346 --
-- Generation 347 --
-- Generation 348 --
-- Generation 349 --
-- Generation 350 --
-- End of (successful) evolution --
                       Benchmark  Instance #  Cluster #     mo-time
0  ICELL8_SE_A_kallisto_umap.csv         571          4  232.197303
Max memory consumption for Job 1782567 on host comp-21-6 is: 898756608.0B
