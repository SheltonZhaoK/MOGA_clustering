#########################BEGIN-PROLOG#########################
JobId             = 1780662
ArrayJobId        = 1780649
ArrayTaskId       = 27
ArrayTaskThrottle = 15
JobName           = clustering
UserId            = zhaok220(20487)
GroupId           = zhaok220(20487)
MCS_label         = N/A
Priority          = 92
Nice              = 0
Account           = khurigrp
QOS               = normal
Requeue           = 1
Restarts          = 0
BatchFlag         = 1
Reboot            = 0
ExitCode          = 0:0
RunTime           = 00:00:00
TimeLimit         = 7-00:00:00
TimeMin           = N/A
SubmitTime        = 2022-07-13T19:04:38
EligibleTime      = 2022-07-13T19:04:38
AccrueTime        = Unknown
StartTime         = 2022-07-13T19:04:38
EndTime           = 2022-07-20T19:04:38
Deadline          = N/A
Partition         = medium
AllocNode:Sid     = gemini:177893
NodeList          = comp-22-4
BatchHost         = comp-22-4
NumNodes          = 1
NumCPUs           = 1
NumTasks          = 1
CPUs/Task         = 1
ReqB:S:C:T        = 0:0:*:*
TRES=cpu=1,mem=64G,node=1,billing= cpu=1,mem=64G,node=1,billing=1
Socks/Node        = *
NtasksPerN:B:S:C  = 1:0:*:*
CoreSpec          = *
MinCPUsNode       = 1
MinMemoryNode     = 64G
MinTmpDiskNode    = 0
Command           = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering_mul.slurm
WorkDir           = /deac/csc/khuriGrp/zhaok220/clustering/slurm
StdErr            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1780662.e
StdOut            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1780662.o
Power             = 
MailUser          = zhaok220@wfu.edu
MailType          = BEGIN,END,FAIL
NtasksPerTRES:0   = NtasksPerTRES:0
###########################END-PROLOG#########################
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014623165130615234 seconds
Jaccard graph constructed in 1.3777050971984863 seconds
Wrote graph to binary file in 0.032584428787231445 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.871585
After 3 runs, maximum modularity is Q = 0.873798
After 13 runs, maximum modularity is Q = 0.875476
After 20 runs, maximum modularity is Q = 0.876693
Louvain completed 40 runs in 1.2608642578125 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.179612159729004 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.016373157501220703 seconds
Jaccard graph constructed in 1.4606812000274658 seconds
Wrote graph to binary file in 0.14205288887023926 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.870639
After 2 runs, maximum modularity is Q = 0.874738
Louvain completed 22 runs in 0.734687328338623 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.83426833152771 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.013090133666992188 seconds
Jaccard graph constructed in 1.3923618793487549 seconds
Wrote graph to binary file in 0.02964496612548828 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.872061
Louvain completed 21 runs in 0.7671413421630859 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.731090784072876 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014539718627929688 seconds
Jaccard graph constructed in 1.4819753170013428 seconds
Wrote graph to binary file in 0.04581928253173828 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.878671
After 5 runs, maximum modularity is Q = 0.879896
After 25 runs, maximum modularity is Q = 0.881135
Louvain completed 45 runs in 1.5602643489837646 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.6060550212860107 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007752656936645508 seconds
Jaccard graph constructed in 0.8666422367095947 seconds
Wrote graph to binary file in 0.016274690628051758 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.826588
After 3 runs, maximum modularity is Q = 0.827906
After 5 runs, maximum modularity is Q = 0.829159
Louvain completed 25 runs in 0.5811488628387451 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.0011091232299805 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008450984954833984 seconds
Jaccard graph constructed in 0.8759670257568359 seconds
Wrote graph to binary file in 0.017328262329101562 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.836743
Louvain completed 21 runs in 0.4177103042602539 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.876272201538086 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007259845733642578 seconds
Jaccard graph constructed in 0.8840692043304443 seconds
Wrote graph to binary file in 0.015128374099731445 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.820512
After 2 runs, maximum modularity is Q = 0.826677
After 8 runs, maximum modularity is Q = 0.8281
Louvain completed 28 runs in 0.619194507598877 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.011279582977295 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.00850987434387207 seconds
Jaccard graph constructed in 0.8293631076812744 seconds
Wrote graph to binary file in 0.016176462173461914 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.823279
Louvain completed 21 runs in 0.41884827613830566 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.781203269958496 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.026298046112060547 seconds
Jaccard graph constructed in 2.2465708255767822 seconds
Wrote graph to binary file in 0.06336665153503418 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.90327
Louvain completed 21 runs in 0.9416322708129883 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.7990174293518066 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.030678510665893555 seconds
Jaccard graph constructed in 2.4381418228149414 seconds
Wrote graph to binary file in 0.07273721694946289 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.903228
After 3 runs, maximum modularity is Q = 0.905011
After 9 runs, maximum modularity is Q = 0.906053
Louvain completed 29 runs in 1.5791316032409668 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.623331308364868 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.025753259658813477 seconds
Jaccard graph constructed in 2.5578272342681885 seconds
Wrote graph to binary file in 0.06266903877258301 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901936
After 7 runs, maximum modularity is Q = 0.902957
After 10 runs, maximum modularity is Q = 0.90398
Louvain completed 30 runs in 1.4927127361297607 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.661308526992798 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.028430461883544922 seconds
Jaccard graph constructed in 2.3082387447357178 seconds
Wrote graph to binary file in 0.06647396087646484 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901457
After 2 runs, maximum modularity is Q = 0.902843
Louvain completed 22 runs in 1.0724995136260986 seconds
Sorting communities by size, please wait ...
