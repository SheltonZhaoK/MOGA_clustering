#########################BEGIN-PROLOG#########################
JobId             = 1783221
JobName           = clustering
UserId            = zhaok220(20487)
GroupId           = zhaok220(20487)
MCS_label         = N/A
Priority          = 92
Nice              = 0
Account           = khurigrp
QOS               = normal
Requeue           = 1
Restarts          = 0
BatchFlag         = 1
Reboot            = 0
ExitCode          = 0:0
RunTime           = 00:00:00
TimeLimit         = 7-00:00:00
TimeMin           = N/A
SubmitTime        = 2022-07-24T02:54:41
EligibleTime      = 2022-07-24T02:54:41
AccrueTime        = 2022-07-24T02:54:41
StartTime         = 2022-07-24T02:54:41
EndTime           = 2022-07-31T02:54:41
Deadline          = N/A
Partition         = medium
AllocNode:Sid     = gemini:178691
NodeList          = comp-21-4
BatchHost         = comp-21-4
NumNodes          = 1
NumCPUs           = 10
NumTasks          = 1
CPUs/Task         = 10
ReqB:S:C:T        = 0:0:*:*
TRES=cpu=10,mem=64G,node=1,billing= cpu=10,mem=64G,node=1,billing=10
Socks/Node        = *
NtasksPerN:B:S:C  = 1:0:*:*
CoreSpec          = *
MinCPUsNode       = 10
MinMemoryNode     = 64G
MinTmpDiskNode    = 0
Command           = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering_mul.slurm
WorkDir           = /deac/csc/khuriGrp/zhaok220/clustering/slurm
StdErr            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1783221.e
StdOut            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1783221.o
Power             = 
MailUser          = zhaok220@wfu.edu
MailType          = BEGIN,END,FAIL
NtasksPerTRES:0   = NtasksPerTRES:0
###########################END-PROLOG#########################
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.011260747909545898 seconds
Jaccard graph constructed in 0.560276985168457 seconds
Wrote graph to binary file in 0.01130366325378418 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.786319
After 8 runs, maximum modularity is Q = 0.78782
Louvain completed 28 runs in 0.7184455394744873 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.7502892017364502 seconds
9
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.009192943572998047 seconds
Jaccard graph constructed in 0.49678468704223633 seconds
Wrote graph to binary file in 0.01036214828491211 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.77795
After 3 runs, maximum modularity is Q = 0.780803
After 4 runs, maximum modularity is Q = 0.781983
After 12 runs, maximum modularity is Q = 0.78322
Louvain completed 32 runs in 0.9034428596496582 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.8826935291290283 seconds
11
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.021892070770263672 seconds
Jaccard graph constructed in 0.6198484897613525 seconds
Wrote graph to binary file in 0.03359079360961914 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.874846
After 5 runs, maximum modularity is Q = 0.876939
After 6 runs, maximum modularity is Q = 0.877967
Louvain completed 26 runs in 1.176952838897705 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.339571952819824 seconds
20
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02631998062133789 seconds
Jaccard graph constructed in 0.6692099571228027 seconds
Wrote graph to binary file in 0.037689924240112305 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.875883
After 10 runs, maximum modularity is Q = 0.877576
Louvain completed 30 runs in 1.3071155548095703 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.6425881385803223 seconds
21
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.026478290557861328 seconds
Jaccard graph constructed in 1.0478897094726562 seconds
Wrote graph to binary file in 0.03953099250793457 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.87575
Louvain completed 21 runs in 1.1907176971435547 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.5962488651275635 seconds
20
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0256044864654541 seconds
Jaccard graph constructed in 0.4803738594055176 seconds
Wrote graph to binary file in 0.05965280532836914 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.879121
Louvain completed 21 runs in 0.8049056529998779 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.9144513607025146 seconds
22
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.013222455978393555 seconds
Jaccard graph constructed in 0.5702741146087646 seconds
Wrote graph to binary file in 0.01801919937133789 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.82539
After 2 runs, maximum modularity is Q = 0.828576
After 14 runs, maximum modularity is Q = 0.829939
Louvain completed 34 runs in 1.0758726596832275 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.1590659618377686 seconds
14
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.013417959213256836 seconds
Jaccard graph constructed in 0.5807704925537109 seconds
Wrote graph to binary file in 0.019243955612182617 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.83608
After 4 runs, maximum modularity is Q = 0.839036
Louvain completed 24 runs in 0.8104119300842285 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.9021415710449219 seconds
15
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.012094259262084961 seconds
Jaccard graph constructed in 0.5667648315429688 seconds
Wrote graph to binary file in 0.017476320266723633 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.82161
After 2 runs, maximum modularity is Q = 0.824421
After 11 runs, maximum modularity is Q = 0.826287
Louvain completed 31 runs in 1.0156772136688232 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.092064380645752 seconds
14
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.012740373611450195 seconds
Jaccard graph constructed in 0.566586971282959 seconds
Wrote graph to binary file in 0.018015384674072266 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.819744
After 7 runs, maximum modularity is Q = 0.821368
Louvain completed 27 runs in 1.1049599647521973 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.38523268699646 seconds
14
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.04180598258972168 seconds
Jaccard graph constructed in 1.1830930709838867 seconds
Wrote graph to binary file in 0.06878089904785156 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.903224
Louvain completed 21 runs in 1.3070688247680664 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.122673273086548 seconds
27
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.03950858116149902 seconds
Jaccard graph constructed in 0.9351921081542969 seconds
Wrote graph to binary file in 0.07964754104614258 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.903786
Louvain completed 21 runs in 1.3147456645965576 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.8578522205352783 seconds
30
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0418088436126709 seconds
Jaccard graph constructed in 0.8750033378601074 seconds
Wrote graph to binary file in 0.06994009017944336 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.902868
Louvain completed 21 runs in 1.2160577774047852 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.7229115962982178 seconds
28
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.041417837142944336 seconds
Jaccard graph constructed in 0.876986026763916 seconds
Wrote graph to binary file in 0.07094073295593262 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901325
After 3 runs, maximum modularity is Q = 0.902557
Louvain completed 23 runs in 1.6367809772491455 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.548659563064575 seconds
26
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02351236343383789 seconds
Jaccard graph constructed in 0.5159692764282227 seconds
Wrote graph to binary file in 0.03382563591003418 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.874971
After 3 runs, maximum modularity is Q = 0.876225
After 4 runs, maximum modularity is Q = 0.877526
Louvain completed 24 runs in 1.3850371837615967 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.4487948417663574 seconds
20
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02537059783935547 seconds
Jaccard graph constructed in 0.5492019653320312 seconds
Wrote graph to binary file in 0.0454401969909668 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.891158
After 19 runs, maximum modularity is Q = 0.892257
Louvain completed 39 runs in 1.9639263153076172 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.999765396118164 seconds
24
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02300739288330078 seconds
Jaccard graph constructed in 0.7020461559295654 seconds
Wrote graph to binary file in 0.03250718116760254 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.877785
Louvain completed 21 runs in 0.7249410152435303 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.028383493423462 seconds
20
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02322530746459961 seconds
Jaccard graph constructed in 0.7042241096496582 seconds
Wrote graph to binary file in 0.03935599327087402 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.881163
After 17 runs, maximum modularity is Q = 0.882692
Louvain completed 37 runs in 1.5230064392089844 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.813718318939209 seconds
20
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.04166436195373535 seconds
Jaccard graph constructed in 0.8742482662200928 seconds
Wrote graph to binary file in 0.06954073905944824 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901312
After 3 runs, maximum modularity is Q = 0.903128
Louvain completed 23 runs in 1.5309944152832031 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.0117568969726562 seconds
26
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.047777652740478516 seconds
Jaccard graph constructed in 0.9409768581390381 seconds
Wrote graph to binary file in 0.07959604263305664 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.907744
After 3 runs, maximum modularity is Q = 0.909099
Louvain completed 23 runs in 1.6956815719604492 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.2644312381744385 seconds
29
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.041397809982299805 seconds
Jaccard graph constructed in 0.8578271865844727 seconds
Wrote graph to binary file in 0.06955122947692871 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.900007
After 3 runs, maximum modularity is Q = 0.901542
Louvain completed 23 runs in 1.4390900135040283 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.910207509994507 seconds
28
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.043508052825927734 seconds
Jaccard graph constructed in 0.8714470863342285 seconds
Wrote graph to binary file in 0.06995606422424316 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.90444
Louvain completed 21 runs in 1.2740662097930908 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.7730441093444824 seconds
29
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.021703004837036133 seconds
Jaccard graph constructed in 0.697195291519165 seconds
Wrote graph to binary file in 0.053746938705444336 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.87395
Louvain completed 21 runs in 1.2078242301940918 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.5773770809173584 seconds
20
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02547764778137207 seconds
Jaccard graph constructed in 0.743464469909668 seconds
Wrote graph to binary file in 0.04109621047973633 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.886344
After 7 runs, maximum modularity is Q = 0.887436
Louvain completed 27 runs in 1.3979804515838623 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.7388789653778076 seconds
24
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02252340316772461 seconds
Jaccard graph constructed in 0.7186715602874756 seconds
Wrote graph to binary file in 0.03567695617675781 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.876067
After 2 runs, maximum modularity is Q = 0.877721
After 11 runs, maximum modularity is Q = 0.878799
Louvain completed 31 runs in 1.3944103717803955 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.693446397781372 seconds
19
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.024719715118408203 seconds
Jaccard graph constructed in 0.7192103862762451 seconds
Wrote graph to binary file in 0.03966021537780762 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.881286
Louvain completed 21 runs in 0.9361698627471924 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.3819875717163086 seconds
22
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.009303808212280273 seconds
Jaccard graph constructed in 0.7334749698638916 seconds
Wrote graph to binary file in 0.006894111633300781 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.717911
Louvain completed 21 runs in 0.8510241508483887 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.1718146800994873 seconds
5
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007972240447998047 seconds
Jaccard graph constructed in 0.3024914264678955 seconds
Wrote graph to binary file in 0.006520509719848633 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.669725
After 6 runs, maximum modularity is Q = 0.672536
Louvain completed 26 runs in 0.4109151363372803 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.023402214050293 seconds
5
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008301734924316406 seconds
Jaccard graph constructed in 0.30695247650146484 seconds
Wrote graph to binary file in 0.005910396575927734 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.686584
After 2 runs, maximum modularity is Q = 0.695475
Louvain completed 22 runs in 0.5280287265777588 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.3707904815673828 seconds
5
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007960319519042969 seconds
Jaccard graph constructed in 0.513887882232666 seconds
Wrote graph to binary file in 0.008003473281860352 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.657824
After 3 runs, maximum modularity is Q = 0.659939
Louvain completed 23 runs in 0.7200441360473633 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.7649598121643066 seconds
6
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008172273635864258 seconds
Jaccard graph constructed in 0.5018637180328369 seconds
Wrote graph to binary file in 0.07498335838317871 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.682633
After 18 runs, maximum modularity is Q = 0.683697
Louvain completed 38 runs in 1.2970118522644043 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.392831563949585 seconds
6
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008658170700073242 seconds
Jaccard graph constructed in 0.5039582252502441 seconds
Wrote graph to binary file in 0.006618976593017578 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.658119
After 2 runs, maximum modularity is Q = 0.659852
Louvain completed 22 runs in 0.6018273830413818 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.6190166473388672 seconds
6
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007318973541259766 seconds
Jaccard graph constructed in 0.48758864402770996 seconds
Wrote graph to binary file in 0.0037755966186523438 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.496807
Louvain completed 21 runs in 0.48250436782836914 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4806320667266846 seconds
2
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007451772689819336 seconds
Jaccard graph constructed in 0.6028356552124023 seconds
Wrote graph to binary file in 0.0043904781341552734 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.492017
Louvain completed 21 runs in 0.6166799068450928 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.1729116439819336 seconds
2
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.00932002067565918 seconds
Jaccard graph constructed in 0.7194831371307373 seconds
Wrote graph to binary file in 0.003866910934448242 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.499634
Louvain completed 21 runs in 0.29595232009887695 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.3226075172424316 seconds
2
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008108139038085938 seconds
Jaccard graph constructed in 0.29334020614624023 seconds
Wrote graph to binary file in 0.006357908248901367 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.358391
Louvain completed 21 runs in 0.34894537925720215 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.0945827960968018 seconds
3
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.00814509391784668 seconds
Jaccard graph constructed in 0.4251589775085449 seconds
Wrote graph to binary file in 0.0035774707794189453 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.383027
Louvain completed 21 runs in 0.5979745388031006 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.5305562019348145 seconds
3
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007998466491699219 seconds
Jaccard graph constructed in 0.47916460037231445 seconds
Wrote graph to binary file in 0.003440380096435547 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.384724
Louvain completed 21 runs in 0.5580275058746338 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.800248622894287 seconds
3
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.00858926773071289 seconds
Jaccard graph constructed in 0.527094841003418 seconds
Wrote graph to binary file in 0.011039018630981445 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.780893
After 2 runs, maximum modularity is Q = 0.783049
After 7 runs, maximum modularity is Q = 0.784122
After 14 runs, maximum modularity is Q = 0.785594
Louvain completed 34 runs in 1.1549153327941895 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.2194154262542725 seconds
10
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.009753704071044922 seconds
Jaccard graph constructed in 0.5525796413421631 seconds
Wrote graph to binary file in 0.010917425155639648 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.790439
After 2 runs, maximum modularity is Q = 0.794301
After 5 runs, maximum modularity is Q = 0.795314
Louvain completed 25 runs in 0.7950384616851807 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.8875131607055664 seconds
10
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.009000062942504883 seconds
Jaccard graph constructed in 0.5248563289642334 seconds
Wrote graph to binary file in 0.00984048843383789 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.786299
After 10 runs, maximum modularity is Q = 0.787537
Louvain completed 30 runs in 0.9529261589050293 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.2844488620758057 seconds
10
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.012121915817260742 seconds
Jaccard graph constructed in 0.9878106117248535 seconds
Wrote graph to binary file in 0.013369083404541016 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.782599
After 7 runs, maximum modularity is Q = 0.783945
Louvain completed 27 runs in 0.5951180458068848 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.917936086654663 seconds
9
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.009096145629882812 seconds
Jaccard graph constructed in 0.3301362991333008 seconds
Wrote graph to binary file in 0.009827613830566406 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.796154
After 2 runs, maximum modularity is Q = 0.798746
Louvain completed 22 runs in 0.4148693084716797 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.2140944004058838 seconds
9
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008652925491333008 seconds
Jaccard graph constructed in 0.4881618022918701 seconds
Wrote graph to binary file in 0.01121211051940918 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.768675
After 2 runs, maximum modularity is Q = 0.771051
Louvain completed 22 runs in 0.7695159912109375 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.7630243301391602 seconds
9
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.00892782211303711 seconds
Jaccard graph constructed in 0.5052099227905273 seconds
Wrote graph to binary file in 0.011458635330200195 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.788339
After 5 runs, maximum modularity is Q = 0.790287
After 23 runs, maximum modularity is Q = 0.791506
Louvain completed 43 runs in 1.5430119037628174 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.572711944580078 seconds
9
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008684158325195312 seconds
Jaccard graph constructed in 0.5391526222229004 seconds
Wrote graph to binary file in 0.010307788848876953 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.778202
After 2 runs, maximum modularity is Q = 0.779348
After 3 runs, maximum modularity is Q = 0.78253
After 7 runs, maximum modularity is Q = 0.78377
Louvain completed 27 runs in 0.893024206161499 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.956949234008789 seconds
10
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008870840072631836 seconds
Jaccard graph constructed in 0.5407924652099609 seconds
Wrote graph to binary file in 0.011494874954223633 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.780442
After 2 runs, maximum modularity is Q = 0.782158
Louvain completed 22 runs in 0.6517715454101562 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.7071120738983154 seconds
9
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.009003400802612305 seconds
Jaccard graph constructed in 0.5807204246520996 seconds
Wrote graph to binary file in 0.010669231414794922 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.772106
After 4 runs, maximum modularity is Q = 0.775599
Louvain completed 24 runs in 0.9121506214141846 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.4098544120788574 seconds
10
[4, 5, 7, 7, 7, 8, 6, 6, 6, 6, 9, 10, 9, 9, 7, 8, 7, 7, 9, 9, 9, 9, 7, 8, 7, 8, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 5, 5, 5, 4, 4, 4, 4, 5, 4, 5]
/deac/csc/khuriGrp/zhaok220/clustering/data/scrna_benchmarks_umap/ICELL8_SE_A_kallisto_umap.csv
-- Begin evolution --
-- Generation 1 --
-- Generation 2 --
-- Generation 3 --
-- Generation 4 --
-- Generation 5 --
-- Generation 6 --
-- Generation 7 --
-- Generation 8 --
-- Generation 9 --
-- Generation 10 --
-- Generation 11 --
-- Generation 12 --
-- Generation 13 --
-- Generation 14 --
-- Generation 15 --
-- Generation 16 --
-- Generation 17 --
-- Generation 18 --
-- Generation 19 --
-- Generation 20 --
-- Generation 21 --
-- Generation 22 --
-- Generation 23 --
-- Generation 24 --
-- Generation 25 --
-- Generation 26 --
-- Generation 27 --
-- Generation 28 --
-- Generation 29 --
-- Generation 30 --
-- Generation 31 --
-- Generation 32 --
-- Generation 33 --
-- Generation 34 --
-- Generation 35 --
-- Generation 36 --
-- Generation 37 --
-- Generation 38 --
-- Generation 39 --
-- Generation 40 --
-- Generation 41 --
-- Generation 42 --
-- Generation 43 --
-- Generation 44 --
-- Generation 45 --
-- Generation 46 --
-- Generation 47 --
-- Generation 48 --
-- Generation 49 --
-- Generation 50 --
-- Generation 51 --
-- Generation 52 --
-- Generation 53 --
-- Generation 54 --
-- Generation 55 --
-- Generation 56 --
-- Generation 57 --
-- Generation 58 --
-- Generation 59 --
-- Generation 60 --
-- Generation 61 --
-- Generation 62 --
-- Generation 63 --
-- Generation 64 --
-- Generation 65 --
-- Generation 66 --
-- Generation 67 --
-- Generation 68 --
-- Generation 69 --
-- Generation 70 --
-- Generation 71 --
-- Generation 72 --
-- Generation 73 --
-- Generation 74 --
-- Generation 75 --
-- Generation 76 --
-- Generation 77 --
-- Generation 78 --
-- Generation 79 --
-- Generation 80 --
-- Generation 81 --
-- Generation 82 --
-- Generation 83 --
-- Generation 84 --
-- Generation 85 --
-- Generation 86 --
-- Generation 87 --
-- Generation 88 --
-- Generation 89 --
-- Generation 90 --
-- Generation 91 --
-- Generation 92 --
-- Generation 93 --
-- Generation 94 --
-- Generation 95 --
-- Generation 96 --
-- Generation 97 --
-- Generation 98 --
-- Generation 99 --
-- Generation 100 --
-- Generation 101 --
-- Generation 102 --
-- Generation 103 --
-- Generation 104 --
-- Generation 105 --
-- Generation 106 --
-- Generation 107 --
-- Generation 108 --
-- Generation 109 --
-- Generation 110 --
-- Generation 111 --
-- Generation 112 --
-- Generation 113 --
-- Generation 114 --
-- Generation 115 --
-- Generation 116 --
-- Generation 117 --
-- Generation 118 --
-- Generation 119 --
-- Generation 120 --
-- Generation 121 --
-- Generation 122 --
-- Generation 123 --
-- Generation 124 --
-- Generation 125 --
-- Generation 126 --
-- Generation 127 --
-- Generation 128 --
-- Generation 129 --
-- Generation 130 --
-- Generation 131 --
-- Generation 132 --
-- Generation 133 --
-- Generation 134 --
-- Generation 135 --
-- Generation 136 --
-- Generation 137 --
-- Generation 138 --
-- Generation 139 --
-- Generation 140 --
-- Generation 141 --
-- Generation 142 --
-- Generation 143 --
-- Generation 144 --
-- Generation 145 --
-- Generation 146 --
-- Generation 147 --
-- Generation 148 --
-- Generation 149 --
-- Generation 150 --
-- Generation 151 --
-- Generation 152 --
-- Generation 153 --
-- Generation 154 --
-- Generation 155 --
-- Generation 156 --
-- Generation 157 --
-- Generation 158 --
-- Generation 159 --
-- Generation 160 --
-- Generation 161 --
-- Generation 162 --
-- Generation 163 --
-- Generation 164 --
-- Generation 165 --
-- Generation 166 --
-- Generation 167 --
-- Generation 168 --
-- Generation 169 --
-- Generation 170 --
-- Generation 171 --
-- Generation 172 --
-- Generation 173 --
-- Generation 174 --
-- Generation 175 --
-- Generation 176 --
-- Generation 177 --
-- Generation 178 --
-- Generation 179 --
-- Generation 180 --
-- Generation 181 --
-- Generation 182 --
-- Generation 183 --
-- Generation 184 --
-- Generation 185 --
-- Generation 186 --
-- Generation 187 --
-- Generation 188 --
-- Generation 189 --
-- Generation 190 --
-- Generation 191 --
-- Generation 192 --
-- Generation 193 --
-- Generation 194 --
-- Generation 195 --
-- Generation 196 --
-- Generation 197 --
-- Generation 198 --
-- Generation 199 --
-- Generation 200 --
-- Generation 201 --
-- Generation 202 --
-- Generation 203 --
-- Generation 204 --
-- Generation 205 --
-- Generation 206 --
-- Generation 207 --
-- Generation 208 --
-- Generation 209 --
-- Generation 210 --
-- Generation 211 --
-- Generation 212 --
-- Generation 213 --
-- Generation 214 --
-- Generation 215 --
-- Generation 216 --
-- Generation 217 --
-- Generation 218 --
-- Generation 219 --
-- Generation 220 --
-- Generation 221 --
-- Generation 222 --
-- Generation 223 --
-- Generation 224 --
-- Generation 225 --
-- Generation 226 --
-- Generation 227 --
-- Generation 228 --
-- Generation 229 --
-- Generation 230 --
-- Generation 231 --
-- Generation 232 --
-- Generation 233 --
-- Generation 234 --
-- Generation 235 --
-- Generation 236 --
-- Generation 237 --
-- Generation 238 --
-- Generation 239 --
-- Generation 240 --
-- Generation 241 --
-- Generation 242 --
-- Generation 243 --
-- Generation 244 --
-- Generation 245 --
-- Generation 246 --
-- Generation 247 --
-- Generation 248 --
-- Generation 249 --
-- Generation 250 --
-- Generation 251 --
-- Generation 252 --
-- Generation 253 --
-- Generation 254 --
-- Generation 255 --
-- Generation 256 --
-- Generation 257 --
-- Generation 258 --
-- Generation 259 --
-- Generation 260 --
-- Generation 261 --
-- Generation 262 --
-- Generation 263 --
-- Generation 264 --
-- Generation 265 --
-- Generation 266 --
-- Generation 267 --
-- Generation 268 --
-- Generation 269 --
-- Generation 270 --
-- Generation 271 --
-- Generation 272 --
-- Generation 273 --
-- Generation 274 --
-- Generation 275 --
-- Generation 276 --
-- Generation 277 --
-- Generation 278 --
-- Generation 279 --
-- Generation 280 --
-- Generation 281 --
-- Generation 282 --
-- Generation 283 --
-- Generation 284 --
-- Generation 285 --
-- Generation 286 --
-- Generation 287 --
-- Generation 288 --
-- Generation 289 --
-- Generation 290 --
-- Generation 291 --
-- Generation 292 --
-- Generation 293 --
-- Generation 294 --
-- Generation 295 --
-- Generation 296 --
-- Generation 297 --
-- Generation 298 --
-- Generation 299 --
-- Generation 300 --
-- Generation 301 --
-- Generation 302 --
-- Generation 303 --
-- Generation 304 --
-- Generation 305 --
-- Generation 306 --
-- Generation 307 --
-- Generation 308 --
-- Generation 309 --
-- Generation 310 --
-- Generation 311 --
-- Generation 312 --
-- Generation 313 --
-- Generation 314 --
-- Generation 315 --
-- Generation 316 --
-- Generation 317 --
-- Generation 318 --
-- Generation 319 --
-- Generation 320 --
-- Generation 321 --
-- Generation 322 --
-- Generation 323 --
-- Generation 324 --
-- Generation 325 --
-- Generation 326 --
-- Generation 327 --
-- Generation 328 --
-- Generation 329 --
-- Generation 330 --
-- Generation 331 --
-- Generation 332 --
-- Generation 333 --
-- Generation 334 --
-- Generation 335 --
-- Generation 336 --
-- Generation 337 --
-- Generation 338 --
-- Generation 339 --
-- Generation 340 --
-- Generation 341 --
-- Generation 342 --
-- Generation 343 --
-- Generation 344 --
-- Generation 345 --
-- Generation 346 --
-- Generation 347 --
-- Generation 348 --
-- Generation 349 --
-- Generation 350 --
-- End of (successful) evolution --
                       Benchmark  Instance #  Cluster #   so-time
0  ICELL8_SE_A_kallisto_umap.csv         571          4  45.15941
Max memory consumption for Job 1783221 on host comp-21-4 is: 623861760.0B
