#########################BEGIN-PROLOG#########################
JobId             = 1753710
JobName           = clustering
UserId            = zhaok220(20487)
GroupId           = zhaok220(20487)
MCS_label         = N/A
Priority          = 110
Nice              = 0
Account           = khurigrp
QOS               = normal
Requeue           = 1
Restarts          = 0
BatchFlag         = 1
Reboot            = 0
ExitCode          = 0:0
RunTime           = 00:00:00
TimeLimit         = 7-00:00:00
TimeMin           = N/A
SubmitTime        = 2022-06-30T14:26:12
EligibleTime      = 2022-06-30T14:26:12
AccrueTime        = 2022-06-30T14:26:12
StartTime         = 2022-06-30T14:26:13
EndTime           = 2022-07-07T14:26:13
Deadline          = N/A
Partition         = medium
AllocNode:Sid     = gemini:228007
NodeList          = comp-02-5
BatchHost         = comp-02-5
NumNodes          = 1
NumCPUs           = 1
NumTasks          = 1
CPUs/Task         = 1
ReqB:S:C:T        = 0:0:*:*
TRES=cpu=1,mem=64G,node=1,billing= cpu=1,mem=64G,node=1,billing=1
Socks/Node        = *
NtasksPerN:B:S:C  = 1:0:*:*
CoreSpec          = *
MinCPUsNode       = 1
MinMemoryNode     = 64G
MinTmpDiskNode    = 0
Command           = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering.slurm
WorkDir           = /deac/csc/khuriGrp/zhaok220/clustering/slurm
StdErr            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1753710.e
StdOut            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1753710.o
Power             = 
MailUser          = zhaok220@wfu.edu
MailType          = BEGIN,END,FAIL
NtasksPerTRES:0   = NtasksPerTRES:0
###########################END-PROLOG#########################
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.005515575408935547 seconds
Jaccard graph constructed in 0.6950168609619141 seconds
Wrote graph to binary file in 0.008439064025878906 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.78263
After 2 runs, maximum modularity is Q = 0.785193
After 9 runs, maximum modularity is Q = 0.78637
Louvain completed 29 runs in 0.42601847648620605 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.6033337116241455 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004815101623535156 seconds
Jaccard graph constructed in 0.6407451629638672 seconds
Wrote graph to binary file in 0.008068561553955078 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.776819
After 2 runs, maximum modularity is Q = 0.782136
After 14 runs, maximum modularity is Q = 0.783217
Louvain completed 34 runs in 0.46111202239990234 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.5523278713226318 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014426469802856445 seconds
Jaccard graph constructed in 1.4266700744628906 seconds
Wrote graph to binary file in 0.032318830490112305 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.875408
After 3 runs, maximum modularity is Q = 0.876598
Louvain completed 23 runs in 0.6422765254974365 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.5703561305999756 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01608133316040039 seconds
Jaccard graph constructed in 1.5767261981964111 seconds
Wrote graph to binary file in 0.03582048416137695 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.876875
Louvain completed 21 runs in 0.5728468894958496 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.738131523132324 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.015063285827636719 seconds
Jaccard graph constructed in 1.5583322048187256 seconds
Wrote graph to binary file in 0.030401229858398438 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.876043
Louvain completed 21 runs in 0.5039815902709961 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.538116216659546 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01594233512878418 seconds
Jaccard graph constructed in 1.5416405200958252 seconds
Wrote graph to binary file in 0.03334379196166992 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.878579
After 2 runs, maximum modularity is Q = 0.880424
Louvain completed 22 runs in 0.6299283504486084 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.7381961345672607 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008130073547363281 seconds
Jaccard graph constructed in 0.8749523162841797 seconds
Wrote graph to binary file in 0.015597820281982422 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.827782
After 20 runs, maximum modularity is Q = 0.829771
Louvain completed 40 runs in 0.6680958271026611 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.018169641494751 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.009079694747924805 seconds
Jaccard graph constructed in 0.9831409454345703 seconds
Wrote graph to binary file in 0.017203807830810547 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.838826
Louvain completed 21 runs in 0.36432647705078125 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.8291020393371582 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.00808572769165039 seconds
Jaccard graph constructed in 0.945889949798584 seconds
Wrote graph to binary file in 0.014886140823364258 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.822748
After 2 runs, maximum modularity is Q = 0.824622
After 6 runs, maximum modularity is Q = 0.826477
Louvain completed 26 runs in 0.5065021514892578 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.9777228832244873 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008430004119873047 seconds
Jaccard graph constructed in 0.8928556442260742 seconds
Wrote graph to binary file in 0.015626907348632812 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.820599
After 7 runs, maximum modularity is Q = 0.821902
Louvain completed 27 runs in 0.4832448959350586 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.889580488204956 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.027755260467529297 seconds
Jaccard graph constructed in 2.473538875579834 seconds
Wrote graph to binary file in 0.07408261299133301 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.903425
Louvain completed 21 runs in 0.9170677661895752 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.9877328872680664 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0326077938079834 seconds
Jaccard graph constructed in 2.6726343631744385 seconds
Wrote graph to binary file in 0.07372832298278809 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.904166
Louvain completed 21 runs in 1.0866150856018066 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.344110727310181 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02843189239501953 seconds
Jaccard graph constructed in 2.7747371196746826 seconds
Wrote graph to binary file in 0.26834821701049805 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.902421
After 11 runs, maximum modularity is Q = 0.904049
Louvain completed 31 runs in 1.4945545196533203 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 5.0511155128479 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.028763294219970703 seconds
Jaccard graph constructed in 2.4962668418884277 seconds
Wrote graph to binary file in 0.06603813171386719 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901238
After 12 runs, maximum modularity is Q = 0.90224
Louvain completed 32 runs in 1.4883670806884766 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.54786229133606 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014758586883544922 seconds
Jaccard graph constructed in 1.5343987941741943 seconds
Wrote graph to binary file in 0.03079986572265625 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.873894
After 2 runs, maximum modularity is Q = 0.875395
After 3 runs, maximum modularity is Q = 0.877346
Louvain completed 23 runs in 0.6614129543304443 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.754422903060913 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.016901254653930664 seconds
Jaccard graph constructed in 1.70717453956604 seconds
Wrote graph to binary file in 0.0402379035949707 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.890246
After 10 runs, maximum modularity is Q = 0.891627
Louvain completed 30 runs in 0.911820650100708 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.225949287414551 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.015627622604370117 seconds
Jaccard graph constructed in 1.5462470054626465 seconds
Wrote graph to binary file in 0.03222084045410156 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.876446
After 9 runs, maximum modularity is Q = 0.878484
Louvain completed 29 runs in 0.7726750373840332 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.8651278018951416 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.015694856643676758 seconds
Jaccard graph constructed in 1.7251403331756592 seconds
Wrote graph to binary file in 0.03694605827331543 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.881236
Louvain completed 21 runs in 0.5784530639648438 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.8292882442474365 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.026983976364135742 seconds
Jaccard graph constructed in 2.5397024154663086 seconds
Wrote graph to binary file in 0.07582306861877441 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.902098
After 19 runs, maximum modularity is Q = 0.903269
Louvain completed 39 runs in 1.6855266094207764 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.78914999961853 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.031998634338378906 seconds
Jaccard graph constructed in 2.6976349353790283 seconds
Wrote graph to binary file in 0.07368230819702148 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.908713
After 20 runs, maximum modularity is Q = 0.909823
Louvain completed 40 runs in 1.9530277252197266 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 5.271021604537964 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02841472625732422 seconds
Jaccard graph constructed in 2.548093318939209 seconds
Wrote graph to binary file in 0.06791353225708008 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.898958
After 2 runs, maximum modularity is Q = 0.900561
Louvain completed 22 runs in 1.0463213920593262 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.156952381134033 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.030302047729492188 seconds
Jaccard graph constructed in 2.5195472240448 seconds
Wrote graph to binary file in 0.0662832260131836 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.904378
After 7 runs, maximum modularity is Q = 0.905488
Louvain completed 27 runs in 1.3429388999938965 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.431782245635986 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014821767807006836 seconds
Jaccard graph constructed in 1.5812225341796875 seconds
Wrote graph to binary file in 0.03181886672973633 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.870558
After 2 runs, maximum modularity is Q = 0.872105
After 6 runs, maximum modularity is Q = 0.873408
After 10 runs, maximum modularity is Q = 0.874527
After 23 runs, maximum modularity is Q = 0.87595
Louvain completed 43 runs in 1.2830359935760498 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.403871774673462 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.018442869186401367 seconds
Jaccard graph constructed in 1.6439316272735596 seconds
Wrote graph to binary file in 0.03741264343261719 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.888098
Louvain completed 21 runs in 0.5793545246124268 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.7713818550109863 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.015090465545654297 seconds
Jaccard graph constructed in 1.607496738433838 seconds
Wrote graph to binary file in 0.032921791076660156 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.877684
Louvain completed 21 runs in 0.5248093605041504 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.6610679626464844 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.016260862350463867 seconds
Jaccard graph constructed in 1.6232569217681885 seconds
Wrote graph to binary file in 0.035765647888183594 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.879303
After 8 runs, maximum modularity is Q = 0.881251
Louvain completed 28 runs in 0.8209712505340576 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.9936344623565674 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.003523111343383789 seconds
Jaccard graph constructed in 0.5410668849945068 seconds
Wrote graph to binary file in 0.003862142562866211 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.717911
Louvain completed 21 runs in 0.24530839920043945 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.2642347812652588 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0042362213134765625 seconds
Jaccard graph constructed in 0.5638325214385986 seconds
Wrote graph to binary file in 0.004397869110107422 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.670873
After 20 runs, maximum modularity is Q = 0.672202
Louvain completed 40 runs in 0.47397327423095703 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.5218935012817383 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0037381649017333984 seconds
Jaccard graph constructed in 0.5818984508514404 seconds
Wrote graph to binary file in 0.004418849945068359 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.693972
After 4 runs, maximum modularity is Q = 0.695475
Louvain completed 24 runs in 0.31117916107177734 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4007644653320312 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0037789344787597656 seconds
Jaccard graph constructed in 0.5874738693237305 seconds
Wrote graph to binary file in 0.004605531692504883 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.657704
After 11 runs, maximum modularity is Q = 0.659549
Louvain completed 31 runs in 0.3903319835662842 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4354960918426514 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0037446022033691406 seconds
Jaccard graph constructed in 0.5854675769805908 seconds
Wrote graph to binary file in 0.004331111907958984 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.682843
After 3 runs, maximum modularity is Q = 0.684194
Louvain completed 23 runs in 0.2960054874420166 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.3852546215057373 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.003816843032836914 seconds
Jaccard graph constructed in 0.6000597476959229 seconds
Wrote graph to binary file in 0.004620790481567383 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.657144
After 7 runs, maximum modularity is Q = 0.659852
Louvain completed 27 runs in 0.3513834476470947 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4322388172149658 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.003093242645263672 seconds
Jaccard graph constructed in 0.5157232284545898 seconds
Wrote graph to binary file in 0.0027229785919189453 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.496807
Louvain completed 21 runs in 0.23611831665039062 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.2400412559509277 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0033097267150878906 seconds
Jaccard graph constructed in 0.5213453769683838 seconds
Wrote graph to binary file in 0.0024499893188476562 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.492017
Louvain completed 21 runs in 0.22356891632080078 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.3054141998291016 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0032300949096679688 seconds
Jaccard graph constructed in 0.49703216552734375 seconds
Wrote graph to binary file in 0.002516031265258789 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.499634
Louvain completed 21 runs in 0.24541926383972168 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.209202527999878 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.002805948257446289 seconds
Jaccard graph constructed in 0.4904518127441406 seconds
Wrote graph to binary file in 0.0024831295013427734 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.358391
Louvain completed 21 runs in 0.23803067207336426 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.2042624950408936 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0026705265045166016 seconds
Jaccard graph constructed in 0.6700546741485596 seconds
Wrote graph to binary file in 0.0025217533111572266 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.383027
Louvain completed 21 runs in 0.22079968452453613 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.3646221160888672 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0026373863220214844 seconds
Jaccard graph constructed in 0.5260014533996582 seconds
Wrote graph to binary file in 0.19084596633911133 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.384724
Louvain completed 21 runs in 0.4140017032623291 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.5987827777862549 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.005194425582885742 seconds
Jaccard graph constructed in 0.7225940227508545 seconds
Wrote graph to binary file in 0.008350372314453125 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.780608
After 2 runs, maximum modularity is Q = 0.782969
After 10 runs, maximum modularity is Q = 0.78416
After 16 runs, maximum modularity is Q = 0.785305
Louvain completed 36 runs in 0.5912454128265381 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.8277628421783447 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.00522613525390625 seconds
Jaccard graph constructed in 0.7127978801727295 seconds
Wrote graph to binary file in 0.007937908172607422 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.79478
After 14 runs, maximum modularity is Q = 0.795841
Louvain completed 34 runs in 0.484513521194458 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.727848768234253 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.005291938781738281 seconds
Jaccard graph constructed in 0.7102348804473877 seconds
Wrote graph to binary file in 0.007971763610839844 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.786069
After 5 runs, maximum modularity is Q = 0.787069
Louvain completed 25 runs in 0.3950955867767334 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.5751538276672363 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0049953460693359375 seconds
Jaccard graph constructed in 0.6638717651367188 seconds
Wrote graph to binary file in 0.007753610610961914 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.781386
After 2 runs, maximum modularity is Q = 0.783772
Louvain completed 22 runs in 0.32561659812927246 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4479553699493408 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004835367202758789 seconds
Jaccard graph constructed in 0.6863934993743896 seconds
Wrote graph to binary file in 0.008138179779052734 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.798072
After 7 runs, maximum modularity is Q = 0.799363
Louvain completed 27 runs in 0.3807373046875 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.5751137733459473 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.005049943923950195 seconds
Jaccard graph constructed in 0.712252140045166 seconds
Wrote graph to binary file in 0.00745844841003418 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.766929
After 3 runs, maximum modularity is Q = 0.771217
Louvain completed 23 runs in 0.34068918228149414 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.5548865795135498 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0050241947174072266 seconds
Jaccard graph constructed in 0.7143032550811768 seconds
Wrote graph to binary file in 0.008112907409667969 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.787718
After 2 runs, maximum modularity is Q = 0.788797
After 4 runs, maximum modularity is Q = 0.789847
Louvain completed 24 runs in 0.4046509265899658 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.6331562995910645 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004868984222412109 seconds
Jaccard graph constructed in 0.68231201171875 seconds
Wrote graph to binary file in 0.00802302360534668 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.775577
After 2 runs, maximum modularity is Q = 0.780713
After 3 runs, maximum modularity is Q = 0.783706
Louvain completed 23 runs in 0.3732786178588867 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.538621187210083 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0049228668212890625 seconds
Jaccard graph constructed in 0.6747097969055176 seconds
Wrote graph to binary file in 0.007919073104858398 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.780616
After 2 runs, maximum modularity is Q = 0.781747
After 3 runs, maximum modularity is Q = 0.783646
Louvain completed 23 runs in 0.41201353073120117 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.6552648544311523 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.00508570671081543 seconds
Jaccard graph constructed in 0.6699535846710205 seconds
Wrote graph to binary file in 0.007701396942138672 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.773382
After 3 runs, maximum modularity is Q = 0.774855
After 11 runs, maximum modularity is Q = 0.776452
Louvain completed 31 runs in 0.4776301383972168 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.7526445388793945 seconds
/deac/csc/khuriGrp/zhaok220/clustering/data/scrna_benchmarks_umap/ICELL8_SE_A_kallisto_umap.csv
-- Begin evolution --
-- Generation 1 --
-- Generation 2 --
-- Generation 3 --
-- Generation 4 --
-- Generation 5 --
-- Generation 6 --
-- Generation 7 --
-- Generation 8 --
-- Generation 9 --
-- Generation 10 --
-- Generation 11 --
-- Generation 12 --
-- Generation 13 --
-- Generation 14 --
-- Generation 15 --
-- Generation 16 --
-- Generation 17 --
-- Generation 18 --
-- Generation 19 --
-- Generation 20 --
-- Generation 21 --
-- Generation 22 --
-- Generation 23 --
-- Generation 24 --
-- Generation 25 --
-- Generation 26 --
-- Generation 27 --
-- Generation 28 --
-- Generation 29 --
-- Generation 30 --
-- Generation 31 --
-- Generation 32 --
-- Generation 33 --
-- Generation 34 --
-- Generation 35 --
-- Generation 36 --
-- Generation 37 --
-- Generation 38 --
-- Generation 39 --
-- Generation 40 --
-- Generation 41 --
-- Generation 42 --
-- Generation 43 --
-- Generation 44 --
-- Generation 45 --
-- Generation 46 --
-- Generation 47 --
-- Generation 48 --
-- Generation 49 --
-- Generation 50 --
-- Generation 51 --
-- Generation 52 --
-- Generation 53 --
-- Generation 54 --
-- Generation 55 --
-- Generation 56 --
-- Generation 57 --
-- Generation 58 --
-- Generation 59 --
-- Generation 60 --
-- Generation 61 --
-- Generation 62 --
-- Generation 63 --
-- Generation 64 --
-- Generation 65 --
-- Generation 66 --
-- Generation 67 --
-- Generation 68 --
-- Generation 69 --
-- Generation 70 --
-- Generation 71 --
-- Generation 72 --
-- Generation 73 --
-- Generation 74 --
-- Generation 75 --
-- Generation 76 --
-- Generation 77 --
-- Generation 78 --
-- Generation 79 --
-- Generation 80 --
-- Generation 81 --
-- Generation 82 --
-- Generation 83 --
-- Generation 84 --
-- Generation 85 --
-- Generation 86 --
-- Generation 87 --
-- Generation 88 --
-- Generation 89 --
-- Generation 90 --
-- Generation 91 --
-- Generation 92 --
-- Generation 93 --
-- Generation 94 --
-- Generation 95 --
-- Generation 96 --
-- Generation 97 --
-- Generation 98 --
-- Generation 99 --
-- Generation 100 --
-- Generation 101 --
-- Generation 102 --
-- Generation 103 --
-- Generation 104 --
-- Generation 105 --
-- Generation 106 --
-- Generation 107 --
-- Generation 108 --
-- Generation 109 --
-- Generation 110 --
-- Generation 111 --
-- Generation 112 --
-- Generation 113 --
-- Generation 114 --
-- Generation 115 --
-- Generation 116 --
-- Generation 117 --
-- Generation 118 --
-- Generation 119 --
-- Generation 120 --
-- Generation 121 --
-- Generation 122 --
-- Generation 123 --
-- Generation 124 --
-- Generation 125 --
-- Generation 126 --
-- Generation 127 --
-- Generation 128 --
-- Generation 129 --
-- Generation 130 --
-- Generation 131 --
-- Generation 132 --
-- Generation 133 --
-- Generation 134 --
-- Generation 135 --
-- Generation 136 --
-- Generation 137 --
-- Generation 138 --
-- Generation 139 --
-- Generation 140 --
-- Generation 141 --
-- Generation 142 --
-- Generation 143 --
-- Generation 144 --
-- Generation 145 --
-- Generation 146 --
-- Generation 147 --
-- Generation 148 --
-- Generation 149 --
-- Generation 150 --
-- Generation 151 --
-- Generation 152 --
-- Generation 153 --
-- Generation 154 --
-- Generation 155 --
-- Generation 156 --
-- Generation 157 --
-- Generation 158 --
-- Generation 159 --
-- Generation 160 --
-- Generation 161 --
-- Generation 162 --
-- Generation 163 --
-- Generation 164 --
-- Generation 165 --
-- Generation 166 --
-- Generation 167 --
-- Generation 168 --
-- Generation 169 --
-- Generation 170 --
-- Generation 171 --
-- Generation 172 --
-- Generation 173 --
-- Generation 174 --
-- Generation 175 --
-- Generation 176 --
-- Generation 177 --
-- Generation 178 --
-- Generation 179 --
-- Generation 180 --
-- Generation 181 --
-- Generation 182 --
-- Generation 183 --
-- Generation 184 --
-- Generation 185 --
-- Generation 186 --
-- Generation 187 --
-- Generation 188 --
-- Generation 189 --
-- Generation 190 --
-- Generation 191 --
-- Generation 192 --
-- Generation 193 --
-- Generation 194 --
-- Generation 195 --
-- Generation 196 --
-- Generation 197 --
-- Generation 198 --
-- Generation 199 --
-- Generation 200 --
-- Generation 201 --
-- Generation 202 --
-- Generation 203 --
-- Generation 204 --
-- Generation 205 --
-- Generation 206 --
-- Generation 207 --
-- Generation 208 --
-- Generation 209 --
-- Generation 210 --
-- Generation 211 --
-- Generation 212 --
-- Generation 213 --
-- Generation 214 --
-- Generation 215 --
-- Generation 216 --
-- Generation 217 --
-- Generation 218 --
-- Generation 219 --
-- Generation 220 --
-- Generation 221 --
-- Generation 222 --
-- Generation 223 --
-- Generation 224 --
-- Generation 225 --
-- Generation 226 --
-- Generation 227 --
-- Generation 228 --
-- Generation 229 --
-- Generation 230 --
-- Generation 231 --
-- Generation 232 --
-- Generation 233 --
-- Generation 234 --
-- Generation 235 --
-- Generation 236 --
-- Generation 237 --
-- Generation 238 --
-- Generation 239 --
-- Generation 240 --
-- Generation 241 --
-- Generation 242 --
-- Generation 243 --
-- Generation 244 --
-- Generation 245 --
-- Generation 246 --
-- Generation 247 --
-- Generation 248 --
-- Generation 249 --
-- Generation 250 --
-- Generation 251 --
-- Generation 252 --
-- Generation 253 --
-- Generation 254 --
-- Generation 255 --
-- Generation 256 --
-- Generation 257 --
-- Generation 258 --
-- Generation 259 --
-- Generation 260 --
-- Generation 261 --
-- Generation 262 --
-- Generation 263 --
-- Generation 264 --
-- Generation 265 --
-- Generation 266 --
-- Generation 267 --
-- Generation 268 --
-- Generation 269 --
-- Generation 270 --
-- Generation 271 --
-- Generation 272 --
-- Generation 273 --
-- Generation 274 --
-- Generation 275 --
-- Generation 276 --
-- Generation 277 --
-- Generation 278 --
-- Generation 279 --
-- Generation 280 --
-- Generation 281 --
-- Generation 282 --
-- Generation 283 --
-- Generation 284 --
-- Generation 285 --
-- Generation 286 --
-- Generation 287 --
-- Generation 288 --
-- Generation 289 --
-- Generation 290 --
-- Generation 291 --
-- Generation 292 --
-- Generation 293 --
-- Generation 294 --
-- Generation 295 --
-- Generation 296 --
-- Generation 297 --
-- Generation 298 --
-- Generation 299 --
-- Generation 300 --
-- Generation 301 --
-- Generation 302 --
-- Generation 303 --
-- Generation 304 --
-- Generation 305 --
-- Generation 306 --
-- Generation 307 --
-- Generation 308 --
-- Generation 309 --
-- Generation 310 --
-- Generation 311 --
-- Generation 312 --
-- Generation 313 --
-- Generation 314 --
-- Generation 315 --
-- Generation 316 --
-- Generation 317 --
-- Generation 318 --
-- Generation 319 --
-- Generation 320 --
-- Generation 321 --
-- Generation 322 --
-- Generation 323 --
-- Generation 324 --
-- Generation 325 --
-- Generation 326 --
-- Generation 327 --
-- Generation 328 --
-- Generation 329 --
-- Generation 330 --
-- Generation 331 --
-- Generation 332 --
-- Generation 333 --
-- Generation 334 --
-- Generation 335 --
-- Generation 336 --
-- Generation 337 --
-- Generation 338 --
-- Generation 339 --
-- Generation 340 --
-- Generation 341 --
-- Generation 342 --
-- Generation 343 --
-- Generation 344 --
-- Generation 345 --
-- Generation 346 --
-- Generation 347 --
-- Generation 348 --
-- Generation 349 --
-- Generation 350 --
-- End of (successful) evolution --
Max memory consumption for Job 1753710 on host comp-02-5 is: 1287745536.0B
