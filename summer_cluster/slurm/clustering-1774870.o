#########################BEGIN-PROLOG#########################
JobId             = 1774870
ArrayJobId        = 1774864
ArrayTaskId       = 5
ArrayTaskThrottle = 10
JobName           = clustering
UserId            = zhaok220(20487)
GroupId           = zhaok220(20487)
MCS_label         = N/A
Priority          = 92
Nice              = 0
Account           = khurigrp
QOS               = normal
Requeue           = 1
Restarts          = 0
BatchFlag         = 1
Reboot            = 0
ExitCode          = 0:0
RunTime           = 00:00:01
TimeLimit         = 7-00:00:00
TimeMin           = N/A
SubmitTime        = 2022-07-08T14:22:46
EligibleTime      = 2022-07-08T14:22:46
AccrueTime        = Unknown
StartTime         = 2022-07-08T14:22:46
EndTime           = 2022-07-15T14:22:47
Deadline          = N/A
Partition         = medium
AllocNode:Sid     = gemini:189140
NodeList          = comp-09-5
BatchHost         = comp-09-5
NumNodes          = 1
NumCPUs           = 1
NumTasks          = 1
CPUs/Task         = 1
ReqB:S:C:T        = 0:0:*:*
TRES=cpu=1,mem=64G,node=1,billing= cpu=1,mem=64G,node=1,billing=1
Socks/Node        = *
NtasksPerN:B:S:C  = 1:0:*:*
CoreSpec          = *
MinCPUsNode       = 1
MinMemoryNode     = 64G
MinTmpDiskNode    = 0
Command           = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering_mul.slurm
WorkDir           = /deac/csc/khuriGrp/zhaok220/clustering/slurm
StdErr            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1774870.e
StdOut            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1774870.o
Power             = 
MailUser          = zhaok220@wfu.edu
MailType          = BEGIN,END,FAIL
NtasksPerTRES:0   = NtasksPerTRES:0
###########################END-PROLOG#########################
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.013195514678955078 seconds
Jaccard graph constructed in 1.3055202960968018 seconds
Wrote graph to binary file in 0.027628183364868164 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.874029
After 6 runs, maximum modularity is Q = 0.875308
After 9 runs, maximum modularity is Q = 0.876526
Louvain completed 29 runs in 0.6967968940734863 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.64760160446167 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.016268014907836914 seconds
Jaccard graph constructed in 1.5358667373657227 seconds
Wrote graph to binary file in 0.0314481258392334 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.869293
After 2 runs, maximum modularity is Q = 0.873789
After 17 runs, maximum modularity is Q = 0.875088
Louvain completed 37 runs in 0.9008724689483643 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.0440549850463867 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.013242006301879883 seconds
Jaccard graph constructed in 1.3702285289764404 seconds
Wrote graph to binary file in 0.026870250701904297 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.871513
After 6 runs, maximum modularity is Q = 0.872571
Louvain completed 26 runs in 0.6052815914154053 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.604841947555542 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014905214309692383 seconds
Jaccard graph constructed in 1.4433059692382812 seconds
Wrote graph to binary file in 0.03110361099243164 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.877681
After 2 runs, maximum modularity is Q = 0.880014
Louvain completed 22 runs in 0.5646014213562012 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.5246899127960205 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007651567459106445 seconds
Jaccard graph constructed in 0.814720630645752 seconds
Wrote graph to binary file in 0.01369786262512207 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.822279
After 2 runs, maximum modularity is Q = 0.825189
After 12 runs, maximum modularity is Q = 0.826378
After 16 runs, maximum modularity is Q = 0.828132
Louvain completed 36 runs in 0.638495922088623 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.9122366905212402 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0075685977935791016 seconds
Jaccard graph constructed in 0.8491184711456299 seconds
Wrote graph to binary file in 0.01468348503112793 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.831539
After 2 runs, maximum modularity is Q = 0.83536
After 4 runs, maximum modularity is Q = 0.837299
Louvain completed 24 runs in 0.47087621688842773 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.842024803161621 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.006737947463989258 seconds
Jaccard graph constructed in 0.7879552841186523 seconds
Wrote graph to binary file in 0.013846874237060547 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.828043
After 16 runs, maximum modularity is Q = 0.829325
Louvain completed 36 runs in 0.5550699234008789 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.8578252792358398 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007102489471435547 seconds
Jaccard graph constructed in 0.8429617881774902 seconds
Wrote graph to binary file in 0.013500452041625977 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.824488
Louvain completed 21 runs in 0.33516597747802734 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.7214751243591309 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.024614334106445312 seconds
Jaccard graph constructed in 2.2140519618988037 seconds
Wrote graph to binary file in 0.05703306198120117 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.902063
After 19 runs, maximum modularity is Q = 0.903114
Louvain completed 39 runs in 1.4387445449829102 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.200051784515381 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02918863296508789 seconds
Jaccard graph constructed in 2.352158546447754 seconds
Wrote graph to binary file in 0.06376290321350098 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.904477
After 13 runs, maximum modularity is Q = 0.905632
Louvain completed 33 runs in 1.3821849822998047 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.298441171646118 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.026547670364379883 seconds
Jaccard graph constructed in 2.3551528453826904 seconds
Wrote graph to binary file in 0.055838584899902344 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.90343
Louvain completed 21 runs in 0.8006229400634766 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.6912097930908203 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02607560157775879 seconds
