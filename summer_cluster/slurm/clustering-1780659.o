#########################BEGIN-PROLOG#########################
JobId             = 1780659
ArrayJobId        = 1780649
ArrayTaskId       = 24
ArrayTaskThrottle = 15
JobName           = clustering
UserId            = zhaok220(20487)
GroupId           = zhaok220(20487)
MCS_label         = N/A
Priority          = 92
Nice              = 0
Account           = khurigrp
QOS               = normal
Requeue           = 1
Restarts          = 0
BatchFlag         = 1
Reboot            = 0
ExitCode          = 0:0
RunTime           = 00:00:00
TimeLimit         = 7-00:00:00
TimeMin           = N/A
SubmitTime        = 2022-07-13T19:04:38
EligibleTime      = 2022-07-13T19:04:38
AccrueTime        = Unknown
StartTime         = 2022-07-13T19:04:38
EndTime           = 2022-07-20T19:04:38
Deadline          = N/A
Partition         = medium
AllocNode:Sid     = gemini:177893
NodeList          = comp-08-8
BatchHost         = comp-08-8
NumNodes          = 1
NumCPUs           = 1
NumTasks          = 1
CPUs/Task         = 1
ReqB:S:C:T        = 0:0:*:*
TRES=cpu=1,mem=64G,node=1,billing= cpu=1,mem=64G,node=1,billing=1
Socks/Node        = *
NtasksPerN:B:S:C  = 1:0:*:*
CoreSpec          = *
MinCPUsNode       = 1
MinMemoryNode     = 64G
MinTmpDiskNode    = 0
Command           = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering_mul.slurm
WorkDir           = /deac/csc/khuriGrp/zhaok220/clustering/slurm
StdErr            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1780659.e
StdOut            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1780659.o
Power             = 
MailUser          = zhaok220@wfu.edu
MailType          = BEGIN,END,FAIL
NtasksPerTRES:0   = NtasksPerTRES:0
###########################END-PROLOG#########################
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.013169527053833008 seconds
Jaccard graph constructed in 1.3864052295684814 seconds
Wrote graph to binary file in 0.029325008392333984 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.875708
Louvain completed 21 runs in 0.5019557476043701 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.4782068729400635 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014858484268188477 seconds
Jaccard graph constructed in 1.4107351303100586 seconds
Wrote graph to binary file in 0.031813859939575195 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.874385
Louvain completed 21 runs in 0.5185902118682861 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.4707188606262207 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.013210296630859375 seconds
Jaccard graph constructed in 1.3777668476104736 seconds
Wrote graph to binary file in 0.027944564819335938 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.871262
After 14 runs, maximum modularity is Q = 0.872262
Louvain completed 34 runs in 0.8031902313232422 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.7058258056640625 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014552831649780273 seconds
Jaccard graph constructed in 1.3981168270111084 seconds
Wrote graph to binary file in 0.03134036064147949 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.878896
After 2 runs, maximum modularity is Q = 0.880419
After 5 runs, maximum modularity is Q = 0.881642
Louvain completed 25 runs in 0.6946368217468262 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.6928648948669434 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007451534271240234 seconds
Jaccard graph constructed in 0.8695473670959473 seconds
Wrote graph to binary file in 0.026515483856201172 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.827735
After 2 runs, maximum modularity is Q = 0.829697
Louvain completed 22 runs in 0.4466729164123535 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.823373794555664 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007754325866699219 seconds
Jaccard graph constructed in 0.9169728755950928 seconds
Wrote graph to binary file in 0.014583349227905273 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.832439
After 2 runs, maximum modularity is Q = 0.834733
After 3 runs, maximum modularity is Q = 0.836159
After 7 runs, maximum modularity is Q = 0.837403
Louvain completed 27 runs in 0.5575737953186035 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.992685317993164 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007158756256103516 seconds
Jaccard graph constructed in 0.8315069675445557 seconds
Wrote graph to binary file in 0.012963294982910156 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.828392
After 14 runs, maximum modularity is Q = 0.829411
Louvain completed 34 runs in 0.5374207496643066 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.9179108142852783 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007031917572021484 seconds
Jaccard graph constructed in 0.869398832321167 seconds
Wrote graph to binary file in 0.013188362121582031 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.822136
After 3 runs, maximum modularity is Q = 0.823204
After 5 runs, maximum modularity is Q = 0.824742
Louvain completed 25 runs in 0.44811034202575684 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.797177791595459 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.025485992431640625 seconds
Jaccard graph constructed in 2.247007369995117 seconds
Wrote graph to binary file in 0.05900692939758301 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.903319
Louvain completed 21 runs in 0.8344411849975586 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.7637789249420166 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.030274152755737305 seconds
Jaccard graph constructed in 2.4732725620269775 seconds
Wrote graph to binary file in 0.06828570365905762 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.903935
After 5 runs, maximum modularity is Q = 0.905621
Louvain completed 25 runs in 1.1500158309936523 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.212329387664795 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02573704719543457 seconds
Jaccard graph constructed in 2.4449827671051025 seconds
Wrote graph to binary file in 0.05832552909851074 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.903524
Louvain completed 21 runs in 0.836451530456543 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.871129274368286 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.024105548858642578 seconds
Jaccard graph constructed in 2.27608585357666 seconds
Wrote graph to binary file in 0.05926656723022461 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901469
After 2 runs, maximum modularity is Q = 0.902601
Louvain completed 22 runs in 0.9733924865722656 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.861835241317749 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.012940406799316406 seconds
Jaccard graph constructed in 1.390176773071289 seconds
Wrote graph to binary file in 0.027564287185668945 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.875339
After 3 runs, maximum modularity is Q = 0.877244
After 15 runs, maximum modularity is Q = 0.878276
Louvain completed 35 runs in 0.8645031452178955 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.7868289947509766 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014675617218017578 seconds
Jaccard graph constructed in 1.499506950378418 seconds
