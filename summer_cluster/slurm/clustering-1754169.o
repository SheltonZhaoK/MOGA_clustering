#########################BEGIN-PROLOG#########################
JobId             = 1754169
ArrayJobId        = 1754167
ArrayTaskId       = 1
ArrayTaskThrottle = 2
JobName           = clustering
UserId            = zhaok220(20487)
GroupId           = zhaok220(20487)
MCS_label         = N/A
Priority          = 90
Nice              = 0
Account           = khurigrp
QOS               = normal
Requeue           = 1
Restarts          = 0
BatchFlag         = 1
Reboot            = 0
ExitCode          = 0:0
RunTime           = 00:00:01
TimeLimit         = 7-00:00:00
TimeMin           = N/A
SubmitTime        = 2022-07-02T02:49:45
EligibleTime      = 2022-07-02T02:49:45
AccrueTime        = Unknown
StartTime         = 2022-07-02T02:49:45
EndTime           = 2022-07-09T02:49:46
Deadline          = N/A
Partition         = medium
AllocNode:Sid     = gemini:95989
NodeList          = comp-24-4
BatchHost         = comp-24-4
NumNodes          = 1
NumCPUs           = 1
NumTasks          = 1
CPUs/Task         = 1
ReqB:S:C:T        = 0:0:*:*
TRES=cpu=1,mem=64G,node=1,billing= cpu=1,mem=64G,node=1,billing=1
Socks/Node        = *
NtasksPerN:B:S:C  = 1:0:*:*
CoreSpec          = *
MinCPUsNode       = 1
MinMemoryNode     = 64G
MinTmpDiskNode    = 0
Command           = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering_mul.slurm
WorkDir           = /deac/csc/khuriGrp/zhaok220/clustering/slurm
StdErr            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1754169.e
StdOut            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1754169.o
Power             = 
MailUser          = zhaok220@wfu.edu
MailType          = BEGIN,END,FAIL
NtasksPerTRES:0   = NtasksPerTRES:0
###########################END-PROLOG#########################
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.006342172622680664 seconds
Jaccard graph constructed in 0.7479567527770996 seconds
Wrote graph to binary file in 0.011254549026489258 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.785434
After 5 runs, maximum modularity is Q = 0.788327
Louvain completed 25 runs in 0.4829883575439453 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.6869912147521973 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004900693893432617 seconds
Jaccard graph constructed in 0.6879737377166748 seconds
Wrote graph to binary file in 0.00894784927368164 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.782497
Louvain completed 21 runs in 0.3501451015472412 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4814064502716064 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014216184616088867 seconds
Jaccard graph constructed in 1.3885672092437744 seconds
Wrote graph to binary file in 0.03249669075012207 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.877289
Louvain completed 21 runs in 0.539193868637085 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.412848711013794 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.016256332397460938 seconds
Jaccard graph constructed in 1.5335431098937988 seconds
Wrote graph to binary file in 0.034151315689086914 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.876777
After 14 runs, maximum modularity is Q = 0.87828
Louvain completed 34 runs in 0.9175906181335449 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.9601457118988037 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01466679573059082 seconds
Jaccard graph constructed in 1.448392391204834 seconds
Wrote graph to binary file in 0.03116893768310547 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.876691
Louvain completed 21 runs in 0.5263445377349854 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.461290121078491 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.016568660736083984 seconds
Jaccard graph constructed in 1.5570883750915527 seconds
Wrote graph to binary file in 0.035208702087402344 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.878977
Louvain completed 21 runs in 0.7083699703216553 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.8290038108825684 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008198261260986328 seconds
Jaccard graph constructed in 0.8449838161468506 seconds
Wrote graph to binary file in 0.015549659729003906 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.826554
After 4 runs, maximum modularity is Q = 0.827659
After 6 runs, maximum modularity is Q = 0.829374
Louvain completed 26 runs in 0.5066390037536621 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.8266830444335938 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008420467376708984 seconds
Jaccard graph constructed in 0.917424201965332 seconds
Wrote graph to binary file in 0.01730513572692871 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.838257
After 4 runs, maximum modularity is Q = 0.839271
Louvain completed 24 runs in 0.4708845615386963 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.8881630897521973 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0075740814208984375 seconds
Jaccard graph constructed in 0.8541707992553711 seconds
Wrote graph to binary file in 0.015812158584594727 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.824823
After 16 runs, maximum modularity is Q = 0.826295
Louvain completed 36 runs in 0.6380951404571533 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.9571881294250488 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007815837860107422 seconds
Jaccard graph constructed in 0.867419958114624 seconds
Wrote graph to binary file in 0.015692472457885742 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.817035
After 2 runs, maximum modularity is Q = 0.819099
After 7 runs, maximum modularity is Q = 0.821037
After 10 runs, maximum modularity is Q = 0.822265
Louvain completed 30 runs in 0.6170625686645508 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.9709486961364746 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.028342485427856445 seconds
Jaccard graph constructed in 2.320406436920166 seconds
Wrote graph to binary file in 0.07373571395874023 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.90397
Louvain completed 21 runs in 0.9335143566131592 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.8384101390838623 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.033469200134277344 seconds
Jaccard graph constructed in 2.5480074882507324 seconds
Wrote graph to binary file in 0.07243895530700684 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.903396
After 6 runs, maximum modularity is Q = 0.904581
Louvain completed 26 runs in 1.3120059967041016 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.449778079986572 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02923130989074707 seconds
Jaccard graph constructed in 2.4179768562316895 seconds
Wrote graph to binary file in 0.06558561325073242 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901977
After 2 runs, maximum modularity is Q = 0.903075
Louvain completed 22 runs in 1.0315115451812744 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.016563177108765 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0298154354095459 seconds
Jaccard graph constructed in 2.579828977584839 seconds
Wrote graph to binary file in 0.06623077392578125 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901315
After 4 runs, maximum modularity is Q = 0.903189
Louvain completed 24 runs in 1.102189064025879 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.4052574634552 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.015578269958496094 seconds
Jaccard graph constructed in 1.466649055480957 seconds
Wrote graph to binary file in 0.031264543533325195 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.877465
Louvain completed 21 runs in 0.5215611457824707 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.544480085372925 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.016918420791625977 seconds
Jaccard graph constructed in 1.5831146240234375 seconds
Wrote graph to binary file in 0.03675508499145508 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.890431
After 11 runs, maximum modularity is Q = 0.891598
Louvain completed 31 runs in 0.841116189956665 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.9290757179260254 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.015184402465820312 seconds
Jaccard graph constructed in 1.4991629123687744 seconds
Wrote graph to binary file in 0.03223729133605957 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.875431
After 4 runs, maximum modularity is Q = 0.876739
After 14 runs, maximum modularity is Q = 0.877806
Louvain completed 34 runs in 0.9445581436157227 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.943814516067505 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01626300811767578 seconds
Jaccard graph constructed in 1.5636036396026611 seconds
Wrote graph to binary file in 0.03635716438293457 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.879711
After 2 runs, maximum modularity is Q = 0.882193
Louvain completed 22 runs in 0.688225269317627 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.769977331161499 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02669668197631836 seconds
Jaccard graph constructed in 2.356137990951538 seconds
Wrote graph to binary file in 0.06641101837158203 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901909
After 6 runs, maximum modularity is Q = 0.903522
Louvain completed 26 runs in 1.165419578552246 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.104025602340698 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.03362584114074707 seconds
Jaccard graph constructed in 2.5676121711730957 seconds
Wrote graph to binary file in 0.07778620719909668 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.906858
After 2 runs, maximum modularity is Q = 0.907918
After 9 runs, maximum modularity is Q = 0.909114
Louvain completed 29 runs in 1.489389181137085 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.651099443435669 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02784585952758789 seconds
Jaccard graph constructed in 2.327622175216675 seconds
Wrote graph to binary file in 0.0675818920135498 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.900478
After 21 runs, maximum modularity is Q = 0.90158
Louvain completed 41 runs in 1.713846206665039 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.602527856826782 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.02921271324157715 seconds
Jaccard graph constructed in 2.352644920349121 seconds
Wrote graph to binary file in 0.06557941436767578 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.903903
After 2 runs, maximum modularity is Q = 0.905116
Louvain completed 22 runs in 1.0028626918792725 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 4.006957054138184 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.015066146850585938 seconds
Jaccard graph constructed in 1.4767911434173584 seconds
Wrote graph to binary file in 0.0319981575012207 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.871842
After 10 runs, maximum modularity is Q = 0.873383
After 11 runs, maximum modularity is Q = 0.876043
Louvain completed 31 runs in 0.8592488765716553 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.839200496673584 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01769232749938965 seconds
Jaccard graph constructed in 1.5423452854156494 seconds
Wrote graph to binary file in 0.03628897666931152 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.886158
After 4 runs, maximum modularity is Q = 0.887666
Louvain completed 24 runs in 0.6928319931030273 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.774968147277832 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.015208244323730469 seconds
Jaccard graph constructed in 1.5017290115356445 seconds
Wrote graph to binary file in 0.031690120697021484 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.876289
After 2 runs, maximum modularity is Q = 0.877908
Louvain completed 22 runs in 0.6549937725067139 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.748875856399536 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01597142219543457 seconds
Jaccard graph constructed in 1.5089387893676758 seconds
Wrote graph to binary file in 0.0355224609375 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.880035
After 16 runs, maximum modularity is Q = 0.881421
Louvain completed 36 runs in 0.9948391914367676 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.040837526321411 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.003325939178466797 seconds
Jaccard graph constructed in 0.5303776264190674 seconds
Wrote graph to binary file in 0.006811857223510742 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.717911
Louvain completed 21 runs in 0.32547593116760254 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.340299129486084 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.003357410430908203 seconds
Jaccard graph constructed in 0.5142481327056885 seconds
Wrote graph to binary file in 0.005077838897705078 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.672202
Louvain completed 21 runs in 0.32698488235473633 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.3237168788909912 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0033121109008789062 seconds
Jaccard graph constructed in 0.5145385265350342 seconds
Wrote graph to binary file in 0.006196260452270508 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.686584
After 3 runs, maximum modularity is Q = 0.695514
Louvain completed 23 runs in 0.3587503433227539 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.341500997543335 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0035941600799560547 seconds
Jaccard graph constructed in 0.5292835235595703 seconds
Wrote graph to binary file in 0.006000041961669922 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.657501
After 3 runs, maximum modularity is Q = 0.660009
Louvain completed 23 runs in 0.34796619415283203 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.330521821975708 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0034203529357910156 seconds
Jaccard graph constructed in 0.5408585071563721 seconds
Wrote graph to binary file in 0.00621342658996582 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.681741
After 2 runs, maximum modularity is Q = 0.683604
Louvain completed 22 runs in 0.36351490020751953 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.4384455680847168 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.003687143325805664 seconds
Jaccard graph constructed in 0.544989824295044 seconds
Wrote graph to binary file in 0.008938789367675781 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.65989
Louvain completed 21 runs in 0.2749800682067871 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.2994911670684814 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0028052330017089844 seconds
Jaccard graph constructed in 0.47142577171325684 seconds
Wrote graph to binary file in 0.002916097640991211 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.496807
Louvain completed 21 runs in 0.25165677070617676 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.2952165603637695 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0029506683349609375 seconds
Jaccard graph constructed in 0.47257089614868164 seconds
Wrote graph to binary file in 0.002956390380859375 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.492017
Louvain completed 21 runs in 0.2490396499633789 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.2659876346588135 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0029418468475341797 seconds
Jaccard graph constructed in 0.47388720512390137 seconds
Wrote graph to binary file in 0.002887248992919922 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.499634
Louvain completed 21 runs in 0.23846006393432617 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.2865705490112305 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0029897689819335938 seconds
Jaccard graph constructed in 0.5220894813537598 seconds
Wrote graph to binary file in 0.005272388458251953 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.358391
Louvain completed 21 runs in 0.2618222236633301 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.2918634414672852 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0025017261505126953 seconds
Jaccard graph constructed in 0.4871048927307129 seconds
Wrote graph to binary file in 0.003935098648071289 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.383167
Louvain completed 21 runs in 0.2480301856994629 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.2377684116363525 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.0024552345275878906 seconds
Jaccard graph constructed in 0.5505077838897705 seconds
Wrote graph to binary file in 0.0028214454650878906 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.384724
Louvain completed 21 runs in 0.2475903034210205 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.2513396739959717 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.00524449348449707 seconds
Jaccard graph constructed in 0.7478234767913818 seconds
Wrote graph to binary file in 0.008333444595336914 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.78199
After 2 runs, maximum modularity is Q = 0.783942
After 9 runs, maximum modularity is Q = 0.785451
Louvain completed 29 runs in 0.4515695571899414 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.7073850631713867 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004787445068359375 seconds
Jaccard graph constructed in 0.6935875415802002 seconds
Wrote graph to binary file in 0.008561849594116211 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.793768
After 2 runs, maximum modularity is Q = 0.795314
Louvain completed 22 runs in 0.3605010509490967 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.6235578060150146 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004852771759033203 seconds
Jaccard graph constructed in 0.6791720390319824 seconds
Wrote graph to binary file in 0.010745763778686523 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.785305
After 5 runs, maximum modularity is Q = 0.78693
Louvain completed 25 runs in 0.4173851013183594 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.608370304107666 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004758596420288086 seconds
Jaccard graph constructed in 0.6614582538604736 seconds
Wrote graph to binary file in 0.00950002670288086 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.784357
Louvain completed 21 runs in 0.33951354026794434 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.503859281539917 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.005053281784057617 seconds
Jaccard graph constructed in 0.6443402767181396 seconds
Wrote graph to binary file in 0.009785890579223633 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.798703
After 4 runs, maximum modularity is Q = 0.800121
Louvain completed 24 runs in 0.42820262908935547 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.5616028308868408 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004523754119873047 seconds
Jaccard graph constructed in 0.6377229690551758 seconds
Wrote graph to binary file in 0.010447025299072266 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.769252
After 16 runs, maximum modularity is Q = 0.771453
Louvain completed 36 runs in 0.8873417377471924 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.011394500732422 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004724979400634766 seconds
Jaccard graph constructed in 0.65104079246521 seconds
Wrote graph to binary file in 0.011369466781616211 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.788916
After 6 runs, maximum modularity is Q = 0.790535
After 23 runs, maximum modularity is Q = 0.791785
Louvain completed 43 runs in 0.6773755550384521 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.849245309829712 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004669189453125 seconds
Jaccard graph constructed in 0.6660242080688477 seconds
Wrote graph to binary file in 0.008740425109863281 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.781669
After 13 runs, maximum modularity is Q = 0.783085
Louvain completed 33 runs in 0.5055105686187744 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.6363840103149414 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004754543304443359 seconds
Jaccard graph constructed in 0.6681585311889648 seconds
Wrote graph to binary file in 0.00918889045715332 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.774104
After 4 runs, maximum modularity is Q = 0.781337
Louvain completed 24 runs in 0.3878493309020996 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.7364647388458252 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.004682302474975586 seconds
Jaccard graph constructed in 0.6745033264160156 seconds
Wrote graph to binary file in 0.008213520050048828 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.770745
After 2 runs, maximum modularity is Q = 0.774348
After 10 runs, maximum modularity is Q = 0.776497
Louvain completed 30 runs in 0.49598026275634766 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.6787078380584717 seconds
/deac/csc/khuriGrp/zhaok220/clustering/data/scrna_benchmarks_umap/ICELL8_SE_A_kallisto_umap.csv
-- Begin evolution --
-- Generation 1 --
-- Generation 2 --
-- Generation 3 --
-- Generation 4 --
-- Generation 5 --
-- Generation 6 --
-- Generation 7 --
-- Generation 8 --
-- Generation 9 --
-- Generation 10 --
-- Generation 11 --
-- Generation 12 --
-- Generation 13 --
-- Generation 14 --
-- Generation 15 --
-- Generation 16 --
-- Generation 17 --
-- Generation 18 --
-- Generation 19 --
-- Generation 20 --
-- Generation 21 --
-- Generation 22 --
-- Generation 23 --
-- Generation 24 --
-- Generation 25 --
-- Generation 26 --
-- Generation 27 --
-- Generation 28 --
-- Generation 29 --
-- Generation 30 --
-- Generation 31 --
-- Generation 32 --
-- Generation 33 --
-- Generation 34 --
-- Generation 35 --
-- Generation 36 --
-- Generation 37 --
-- Generation 38 --
-- Generation 39 --
-- Generation 40 --
-- Generation 41 --
-- Generation 42 --
-- Generation 43 --
-- Generation 44 --
-- Generation 45 --
-- Generation 46 --
-- Generation 47 --
-- Generation 48 --
-- Generation 49 --
-- Generation 50 --
-- Generation 51 --
-- Generation 52 --
-- Generation 53 --
-- Generation 54 --
-- Generation 55 --
-- Generation 56 --
-- Generation 57 --
-- Generation 58 --
-- Generation 59 --
-- Generation 60 --
-- Generation 61 --
-- Generation 62 --
-- Generation 63 --
-- Generation 64 --
-- Generation 65 --
-- Generation 66 --
-- Generation 67 --
-- Generation 68 --
-- Generation 69 --
-- Generation 70 --
-- Generation 71 --
-- Generation 72 --
-- Generation 73 --
-- Generation 74 --
-- Generation 75 --
-- Generation 76 --
-- Generation 77 --
-- Generation 78 --
-- Generation 79 --
-- Generation 80 --
-- Generation 81 --
-- Generation 82 --
-- Generation 83 --
-- Generation 84 --
-- Generation 85 --
-- Generation 86 --
-- Generation 87 --
-- Generation 88 --
-- Generation 89 --
-- Generation 90 --
-- Generation 91 --
-- Generation 92 --
-- Generation 93 --
-- Generation 94 --
-- Generation 95 --
-- Generation 96 --
-- Generation 97 --
-- Generation 98 --
-- Generation 99 --
-- Generation 100 --
-- Generation 101 --
-- Generation 102 --
-- Generation 103 --
-- Generation 104 --
-- Generation 105 --
-- Generation 106 --
-- Generation 107 --
-- Generation 108 --
-- Generation 109 --
-- Generation 110 --
-- Generation 111 --
-- Generation 112 --
-- Generation 113 --
-- Generation 114 --
-- Generation 115 --
-- Generation 116 --
-- Generation 117 --
-- Generation 118 --
-- Generation 119 --
-- Generation 120 --
-- Generation 121 --
-- Generation 122 --
-- Generation 123 --
-- Generation 124 --
-- Generation 125 --
-- Generation 126 --
-- Generation 127 --
-- Generation 128 --
-- Generation 129 --
-- Generation 130 --
-- Generation 131 --
-- Generation 132 --
-- Generation 133 --
-- Generation 134 --
-- Generation 135 --
-- Generation 136 --
-- Generation 137 --
-- Generation 138 --
-- Generation 139 --
-- Generation 140 --
-- Generation 141 --
-- Generation 142 --
-- Generation 143 --
-- Generation 144 --
-- Generation 145 --
-- Generation 146 --
-- Generation 147 --
-- Generation 148 --
-- Generation 149 --
-- Generation 150 --
-- Generation 151 --
-- Generation 152 --
-- Generation 153 --
-- Generation 154 --
-- Generation 155 --
-- Generation 156 --
-- Generation 157 --
-- Generation 158 --
-- Generation 159 --
-- Generation 160 --
-- Generation 161 --
-- Generation 162 --
-- Generation 163 --
-- Generation 164 --
-- Generation 165 --
-- Generation 166 --
-- Generation 167 --
-- Generation 168 --
-- Generation 169 --
-- Generation 170 --
-- Generation 171 --
-- Generation 172 --
-- Generation 173 --
-- Generation 174 --
-- Generation 175 --
-- Generation 176 --
-- Generation 177 --
-- Generation 178 --
-- Generation 179 --
-- Generation 180 --
-- Generation 181 --
-- Generation 182 --
-- Generation 183 --
-- Generation 184 --
-- Generation 185 --
-- Generation 186 --
-- Generation 187 --
-- Generation 188 --
-- Generation 189 --
-- Generation 190 --
-- Generation 191 --
-- Generation 192 --
-- Generation 193 --
-- Generation 194 --
-- Generation 195 --
-- Generation 196 --
-- Generation 197 --
-- Generation 198 --
-- Generation 199 --
-- Generation 200 --
-- Generation 201 --
-- Generation 202 --
-- Generation 203 --
-- Generation 204 --
-- Generation 205 --
-- Generation 206 --
-- Generation 207 --
-- Generation 208 --
-- Generation 209 --
-- Generation 210 --
-- Generation 211 --
-- Generation 212 --
-- Generation 213 --
-- Generation 214 --
-- Generation 215 --
-- Generation 216 --
-- Generation 217 --
-- Generation 218 --
-- Generation 219 --
-- Generation 220 --
-- Generation 221 --
-- Generation 222 --
-- Generation 223 --
-- Generation 224 --
-- Generation 225 --
-- Generation 226 --
-- Generation 227 --
-- Generation 228 --
-- Generation 229 --
-- Generation 230 --
-- Generation 231 --
-- Generation 232 --
-- Generation 233 --
-- Generation 234 --
-- Generation 235 --
-- Generation 236 --
-- Generation 237 --
-- Generation 238 --
-- Generation 239 --
-- Generation 240 --
-- Generation 241 --
-- Generation 242 --
-- Generation 243 --
-- Generation 244 --
-- Generation 245 --
-- Generation 246 --
-- Generation 247 --
-- Generation 248 --
-- Generation 249 --
-- Generation 250 --
-- Generation 251 --
-- Generation 252 --
-- Generation 253 --
-- Generation 254 --
-- Generation 255 --
-- Generation 256 --
-- Generation 257 --
-- Generation 258 --
-- Generation 259 --
-- Generation 260 --
-- Generation 261 --
-- Generation 262 --
-- Generation 263 --
-- Generation 264 --
-- Generation 265 --
-- Generation 266 --
-- Generation 267 --
-- Generation 268 --
-- Generation 269 --
-- Generation 270 --
-- Generation 271 --
-- Generation 272 --
-- Generation 273 --
-- Generation 274 --
-- Generation 275 --
-- Generation 276 --
-- Generation 277 --
-- Generation 278 --
-- Generation 279 --
-- Generation 280 --
-- Generation 281 --
-- Generation 282 --
-- Generation 283 --
-- Generation 284 --
-- Generation 285 --
-- Generation 286 --
-- Generation 287 --
-- Generation 288 --
-- Generation 289 --
-- Generation 290 --
-- Generation 291 --
-- Generation 292 --
-- Generation 293 --
-- Generation 294 --
-- Generation 295 --
-- Generation 296 --
-- Generation 297 --
-- Generation 298 --
-- Generation 299 --
-- Generation 300 --
-- Generation 301 --
-- Generation 302 --
-- Generation 303 --
-- Generation 304 --
-- Generation 305 --
-- Generation 306 --
-- Generation 307 --
-- Generation 308 --
-- Generation 309 --
-- Generation 310 --
-- Generation 311 --
-- Generation 312 --
-- Generation 313 --
-- Generation 314 --
-- Generation 315 --
-- Generation 316 --
-- Generation 317 --
-- Generation 318 --
-- Generation 319 --
-- Generation 320 --
-- Generation 321 --
-- Generation 322 --
-- Generation 323 --
-- Generation 324 --
-- Generation 325 --
-- Generation 326 --
-- Generation 327 --
-- Generation 328 --
-- Generation 329 --
-- Generation 330 --
-- Generation 331 --
-- Generation 332 --
-- Generation 333 --
-- Generation 334 --
-- Generation 335 --
-- Generation 336 --
-- Generation 337 --
-- Generation 338 --
-- Generation 339 --
-- Generation 340 --
-- Generation 341 --
-- Generation 342 --
-- Generation 343 --
-- Generation 344 --
-- Generation 345 --
-- Generation 346 --
-- Generation 347 --
-- Generation 348 --
-- Generation 349 --
-- Generation 350 --
-- End of (successful) evolution --
Max memory consumption for Job 1754169 on host comp-24-4 is: 1299501056.0B
