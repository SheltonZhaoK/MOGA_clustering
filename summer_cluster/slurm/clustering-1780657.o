#########################BEGIN-PROLOG#########################
JobId             = 1780657
ArrayJobId        = 1780649
ArrayTaskId       = 22
ArrayTaskThrottle = 15
JobName           = clustering
UserId            = zhaok220(20487)
GroupId           = zhaok220(20487)
MCS_label         = N/A
Priority          = 92
Nice              = 0
Account           = khurigrp
QOS               = normal
Requeue           = 1
Restarts          = 0
BatchFlag         = 1
Reboot            = 0
ExitCode          = 0:0
RunTime           = 00:00:00
TimeLimit         = 7-00:00:00
TimeMin           = N/A
SubmitTime        = 2022-07-13T19:04:38
EligibleTime      = 2022-07-13T19:04:38
AccrueTime        = Unknown
StartTime         = 2022-07-13T19:04:38
EndTime           = 2022-07-20T19:04:38
Deadline          = N/A
Partition         = medium
AllocNode:Sid     = gemini:177893
NodeList          = comp-08-7
BatchHost         = comp-08-7
NumNodes          = 1
NumCPUs           = 1
NumTasks          = 1
CPUs/Task         = 1
ReqB:S:C:T        = 0:0:*:*
TRES=cpu=1,mem=64G,node=1,billing= cpu=1,mem=64G,node=1,billing=1
Socks/Node        = *
NtasksPerN:B:S:C  = 1:0:*:*
CoreSpec          = *
MinCPUsNode       = 1
MinMemoryNode     = 64G
MinTmpDiskNode    = 0
Command           = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering_mul.slurm
WorkDir           = /deac/csc/khuriGrp/zhaok220/clustering/slurm
StdErr            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1780657.e
StdOut            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1780657.o
Power             = 
MailUser          = zhaok220@wfu.edu
MailType          = BEGIN,END,FAIL
NtasksPerTRES:0   = NtasksPerTRES:0
###########################END-PROLOG#########################
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.013732433319091797 seconds
Jaccard graph constructed in 1.3735404014587402 seconds
Wrote graph to binary file in 0.028102636337280273 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.874513
After 3 runs, maximum modularity is Q = 0.875515
Louvain completed 23 runs in 0.5856819152832031 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.511451244354248 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.015129804611206055 seconds
Jaccard graph constructed in 1.4341964721679688 seconds
Wrote graph to binary file in 0.032091617584228516 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.873312
Louvain completed 21 runs in 0.5251519680023193 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.5909855365753174 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01350545883178711 seconds
Jaccard graph constructed in 1.4247236251831055 seconds
Wrote graph to binary file in 0.027034997940063477 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.870501
After 2 runs, maximum modularity is Q = 0.87267
Louvain completed 22 runs in 0.5791747570037842 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.6009936332702637 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014560699462890625 seconds
Jaccard graph constructed in 1.41163969039917 seconds
Wrote graph to binary file in 0.03167557716369629 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.880666
Louvain completed 21 runs in 0.5390641689300537 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.6183605194091797 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007724285125732422 seconds
Jaccard graph constructed in 0.8243110179901123 seconds
Wrote graph to binary file in 0.01595139503479004 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.822754
After 2 runs, maximum modularity is Q = 0.825005
After 4 runs, maximum modularity is Q = 0.826543
After 5 runs, maximum modularity is Q = 0.827672
Louvain completed 25 runs in 0.7798256874084473 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.1074342727661133 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007584333419799805 seconds
Jaccard graph constructed in 0.8435688018798828 seconds
Wrote graph to binary file in 0.01500391960144043 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.835053
After 5 runs, maximum modularity is Q = 0.836597
After 15 runs, maximum modularity is Q = 0.837878
Louvain completed 35 runs in 0.6315038204193115 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 1.9863271713256836 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.006877899169921875 seconds
Jaccard graph constructed in 0.9292178153991699 seconds
Wrote graph to binary file in 0.013286352157592773 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.822156
After 2 runs, maximum modularity is Q = 0.827938
After 10 runs, maximum modularity is Q = 0.8291
Louvain completed 30 runs in 0.5464658737182617 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.0057342052459717 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007090330123901367 seconds
Jaccard graph constructed in 0.8417837619781494 seconds
Wrote graph to binary file in 0.013297080993652344 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.819621
After 3 runs, maximum modularity is Q = 0.821397
After 4 runs, maximum modularity is Q = 0.82253
After 20 runs, maximum modularity is Q = 0.823983
Louvain completed 40 runs in 0.7188935279846191 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.088474750518799 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.024941205978393555 seconds
Jaccard graph constructed in 2.2414166927337646 seconds
Wrote graph to binary file in 0.05960893630981445 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.902203
Louvain completed 21 runs in 0.8537259101867676 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.7750954627990723 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.028168678283691406 seconds
Jaccard graph constructed in 2.4241559505462646 seconds
Wrote graph to binary file in 0.06537866592407227 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.906298
Louvain completed 21 runs in 0.9631855487823486 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.9853708744049072 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.026087045669555664 seconds
Jaccard graph constructed in 2.3761041164398193 seconds
Wrote graph to binary file in 0.058608293533325195 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.903291
Louvain completed 21 runs in 0.8875274658203125 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.922025203704834 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.026308774948120117 seconds
Jaccard graph constructed in 2.2454941272735596 seconds
Wrote graph to binary file in 0.06110501289367676 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.901903
Louvain completed 21 runs in 0.9011473655700684 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.779820680618286 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.013767719268798828 seconds
Jaccard graph constructed in 1.352405071258545 seconds
Wrote graph to binary file in 0.028817176818847656 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.875664
After 6 runs, maximum modularity is Q = 0.878051
Louvain completed 26 runs in 0.6782395839691162 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.559068441390991 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014891624450683594 seconds
Jaccard graph constructed in 1.558568000793457 seconds
Wrote graph to binary file in 0.03351736068725586 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.885695
After 3 runs, maximum modularity is Q = 0.886933
