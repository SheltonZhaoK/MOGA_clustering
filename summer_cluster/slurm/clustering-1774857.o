#########################BEGIN-PROLOG#########################
JobId             = 1774857
ArrayJobId        = 1774855
ArrayTaskId       = 1
ArrayTaskThrottle = 6
JobName           = clustering
UserId            = zhaok220(20487)
GroupId           = zhaok220(20487)
MCS_label         = N/A
Priority          = 92
Nice              = 0
Account           = khurigrp
QOS               = normal
Requeue           = 1
Restarts          = 0
BatchFlag         = 1
Reboot            = 0
ExitCode          = 0:0
RunTime           = 00:00:00
TimeLimit         = 7-00:00:00
TimeMin           = N/A
SubmitTime        = 2022-07-08T14:20:55
EligibleTime      = 2022-07-08T14:20:56
AccrueTime        = Unknown
StartTime         = 2022-07-08T14:20:56
EndTime           = 2022-07-15T14:20:56
Deadline          = N/A
Partition         = medium
AllocNode:Sid     = gemini:189140
NodeList          = comp-03-6
BatchHost         = comp-03-6
NumNodes          = 1
NumCPUs           = 1
NumTasks          = 1
CPUs/Task         = 1
ReqB:S:C:T        = 0:0:*:*
TRES=cpu=1,mem=64G,node=1,billing= cpu=1,mem=64G,node=1,billing=1
Socks/Node        = *
NtasksPerN:B:S:C  = 1:0:*:*
CoreSpec          = *
MinCPUsNode       = 1
MinMemoryNode     = 64G
MinTmpDiskNode    = 0
Command           = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering_mul.slurm
WorkDir           = /deac/csc/khuriGrp/zhaok220/clustering/slurm
StdErr            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1774857.e
StdOut            = /deac/csc/khuriGrp/zhaok220/clustering/slurm/clustering-1774857.o
Power             = 
MailUser          = zhaok220@wfu.edu
MailType          = BEGIN,END,FAIL
NtasksPerTRES:0   = NtasksPerTRES:0
###########################END-PROLOG#########################
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.014420270919799805 seconds
Jaccard graph constructed in 1.3542513847351074 seconds
Wrote graph to binary file in 0.03096318244934082 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.874411
After 18 runs, maximum modularity is Q = 0.875702
After 37 runs, maximum modularity is Q = 0.876775
Louvain completed 57 runs in 1.4754033088684082 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.342226982116699 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.01607346534729004 seconds
Jaccard graph constructed in 1.4574806690216064 seconds
Wrote graph to binary file in 0.033344268798828125 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.873433
After 5 runs, maximum modularity is Q = 0.8751
Louvain completed 25 runs in 0.7356319427490234 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.722144365310669 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.013494491577148438 seconds
Jaccard graph constructed in 1.3336353302001953 seconds
Wrote graph to binary file in 0.029409170150756836 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.870508
After 4 runs, maximum modularity is Q = 0.872181
Louvain completed 24 runs in 0.6619799137115479 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.5075132846832275 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.015166282653808594 seconds
Jaccard graph constructed in 1.4659793376922607 seconds
Wrote graph to binary file in 0.032774925231933594 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.87889
After 2 runs, maximum modularity is Q = 0.880985
Louvain completed 22 runs in 0.6631302833557129 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.6495864391326904 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.007808685302734375 seconds
Jaccard graph constructed in 0.8757708072662354 seconds
Wrote graph to binary file in 0.015275716781616211 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.826299
After 3 runs, maximum modularity is Q = 0.827536
After 9 runs, maximum modularity is Q = 0.829962
Louvain completed 29 runs in 0.6211733818054199 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.0508737564086914 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.008797168731689453 seconds
Jaccard graph constructed in 1.2527010440826416 seconds
Wrote graph to binary file in 0.01900506019592285 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.834113
After 4 runs, maximum modularity is Q = 0.836789
Louvain completed 24 runs in 0.7743399143218994 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 2.6270227432250977 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.010935306549072266 seconds
Jaccard graph constructed in 1.4891626834869385 seconds
Wrote graph to binary file in 0.018537282943725586 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.825776
After 3 runs, maximum modularity is Q = 0.82823
After 5 runs, maximum modularity is Q = 0.829355
Louvain completed 25 runs in 1.0532300472259521 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.535475969314575 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.010467052459716797 seconds
Jaccard graph constructed in 1.5665531158447266 seconds
Wrote graph to binary file in 0.018607139587402344 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.820677
After 2 runs, maximum modularity is Q = 0.824109
Louvain completed 22 runs in 0.786431074142456 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 3.343013286590576 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.03465747833251953 seconds
Jaccard graph constructed in 4.070783376693726 seconds
Wrote graph to binary file in 0.11842536926269531 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.90223
After 3 runs, maximum modularity is Q = 0.903641
Louvain completed 23 runs in 2.8047008514404297 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 9.175817012786865 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.05307579040527344 seconds
Jaccard graph constructed in 5.869654893875122 seconds
Wrote graph to binary file in 0.1098334789276123 seconds
Running Louvain modularity optimization
After 1 runs, maximum modularity is Q = 0.903887
After 2 runs, maximum modularity is Q = 0.904926
After 10 runs, maximum modularity is Q = 0.906483
Louvain completed 30 runs in 2.424048900604248 seconds
Sorting communities by size, please wait ...
PhenoGraph completed in 9.497909307479858 seconds
Finding 30 nearest neighbors using minkowski metric and 'auto' algorithm
Neighbors computed in 0.03470635414123535 seconds
Jaccard graph constructed in 3.94970703125 seconds
Wrote graph to binary file in 0.09640908241271973 seconds
Running Louvain modularity optimization
